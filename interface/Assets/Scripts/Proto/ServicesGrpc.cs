// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Services.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Protobuf {
  public static partial class AvailableService
  {
    static readonly string __ServiceName = "protobuf.AvailableService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.IDMsg> __Marshaller_protobuf_IDMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.IDMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.BoolRes> __Marshaller_protobuf_BoolRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.BoolRes.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.PlayerMsg> __Marshaller_protobuf_PlayerMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.PlayerMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.MessageToClient> __Marshaller_protobuf_MessageToClient = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.MessageToClient.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.MoveMsg> __Marshaller_protobuf_MoveMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.MoveMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.MoveRes> __Marshaller_protobuf_MoveRes = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.MoveRes.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.PropMsg> __Marshaller_protobuf_PropMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.PropMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.SkillMsg> __Marshaller_protobuf_SkillMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.SkillMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.SendMsg> __Marshaller_protobuf_SendMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.SendMsg.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Protobuf.AttackMsg> __Marshaller_protobuf_AttackMsg = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Protobuf.AttackMsg.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes> __Method_TryConnection = new grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "TryConnection",
        __Marshaller_protobuf_IDMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.PlayerMsg, global::Protobuf.MessageToClient> __Method_AddPlayer = new grpc::Method<global::Protobuf.PlayerMsg, global::Protobuf.MessageToClient>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "AddPlayer",
        __Marshaller_protobuf_PlayerMsg,
        __Marshaller_protobuf_MessageToClient);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.MoveMsg, global::Protobuf.MoveRes> __Method_Move = new grpc::Method<global::Protobuf.MoveMsg, global::Protobuf.MoveRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Move",
        __Marshaller_protobuf_MoveMsg,
        __Marshaller_protobuf_MoveRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.PropMsg, global::Protobuf.BoolRes> __Method_PickProp = new grpc::Method<global::Protobuf.PropMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PickProp",
        __Marshaller_protobuf_PropMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.PropMsg, global::Protobuf.BoolRes> __Method_UseProp = new grpc::Method<global::Protobuf.PropMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UseProp",
        __Marshaller_protobuf_PropMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.PropMsg, global::Protobuf.BoolRes> __Method_ThrowProp = new grpc::Method<global::Protobuf.PropMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ThrowProp",
        __Marshaller_protobuf_PropMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.SkillMsg, global::Protobuf.BoolRes> __Method_UseSkill = new grpc::Method<global::Protobuf.SkillMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UseSkill",
        __Marshaller_protobuf_SkillMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.SendMsg, global::Protobuf.BoolRes> __Method_SendMessage = new grpc::Method<global::Protobuf.SendMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendMessage",
        __Marshaller_protobuf_SendMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes> __Method_StartLearning = new grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartLearning",
        __Marshaller_protobuf_IDMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes> __Method_StartRescueMate = new grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartRescueMate",
        __Marshaller_protobuf_IDMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes> __Method_StartTreatMate = new grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartTreatMate",
        __Marshaller_protobuf_IDMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.AttackMsg, global::Protobuf.BoolRes> __Method_Attack = new grpc::Method<global::Protobuf.AttackMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Attack",
        __Marshaller_protobuf_AttackMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes> __Method_Graduate = new grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Graduate",
        __Marshaller_protobuf_IDMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes> __Method_OpenDoor = new grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "OpenDoor",
        __Marshaller_protobuf_IDMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes> __Method_CloseDoor = new grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CloseDoor",
        __Marshaller_protobuf_IDMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes> __Method_SkipWindow = new grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SkipWindow",
        __Marshaller_protobuf_IDMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes> __Method_StartOpenGate = new grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartOpenGate",
        __Marshaller_protobuf_IDMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes> __Method_StartOpenChest = new grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartOpenChest",
        __Marshaller_protobuf_IDMsg,
        __Marshaller_protobuf_BoolRes);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes> __Method_EndAllAction = new grpc::Method<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EndAllAction",
        __Marshaller_protobuf_IDMsg,
        __Marshaller_protobuf_BoolRes);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Protobuf.ServicesReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of AvailableService</summary>
    [grpc::BindServiceMethod(typeof(AvailableService), "BindService")]
    public abstract partial class AvailableServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> TryConnection(global::Protobuf.IDMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 游戏开局调用一次的服务
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="responseStream">Used for sending responses back to the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>A task indicating completion of the handler.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task AddPlayer(global::Protobuf.PlayerMsg request, grpc::IServerStreamWriter<global::Protobuf.MessageToClient> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 游戏过程中玩家执行操作的服务
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.MoveRes> Move(global::Protobuf.MoveMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> PickProp(global::Protobuf.PropMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> UseProp(global::Protobuf.PropMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> ThrowProp(global::Protobuf.PropMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> UseSkill(global::Protobuf.SkillMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> SendMessage(global::Protobuf.SendMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// rpc GetMessage (IDMsg) returns (stream MsgRes);
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> StartLearning(global::Protobuf.IDMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 开始救人
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> StartRescueMate(global::Protobuf.IDMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> StartTreatMate(global::Protobuf.IDMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 攻击
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> Attack(global::Protobuf.AttackMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 相当于逃跑
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> Graduate(global::Protobuf.IDMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 开门
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> OpenDoor(global::Protobuf.IDMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 关门
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> CloseDoor(global::Protobuf.IDMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 窗户
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> SkipWindow(global::Protobuf.IDMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 开闸门
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> StartOpenGate(global::Protobuf.IDMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> StartOpenChest(global::Protobuf.IDMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// 结束所有动作
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Protobuf.BoolRes> EndAllAction(global::Protobuf.IDMsg request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for AvailableService</summary>
    public partial class AvailableServiceClient : grpc::ClientBase<AvailableServiceClient>
    {
      /// <summary>Creates a new client for AvailableService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AvailableServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for AvailableService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public AvailableServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AvailableServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected AvailableServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes TryConnection(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TryConnection(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes TryConnection(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_TryConnection, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> TryConnectionAsync(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return TryConnectionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> TryConnectionAsync(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_TryConnection, null, options, request);
      }
      /// <summary>
      /// 游戏开局调用一次的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Protobuf.MessageToClient> AddPlayer(global::Protobuf.PlayerMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddPlayer(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 游戏开局调用一次的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Protobuf.MessageToClient> AddPlayer(global::Protobuf.PlayerMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_AddPlayer, null, options, request);
      }
      /// <summary>
      /// 游戏过程中玩家执行操作的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.MoveRes Move(global::Protobuf.MoveMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Move(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 游戏过程中玩家执行操作的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.MoveRes Move(global::Protobuf.MoveMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Move, null, options, request);
      }
      /// <summary>
      /// 游戏过程中玩家执行操作的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.MoveRes> MoveAsync(global::Protobuf.MoveMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MoveAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 游戏过程中玩家执行操作的服务
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.MoveRes> MoveAsync(global::Protobuf.MoveMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Move, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes PickProp(global::Protobuf.PropMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PickProp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes PickProp(global::Protobuf.PropMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PickProp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> PickPropAsync(global::Protobuf.PropMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PickPropAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> PickPropAsync(global::Protobuf.PropMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PickProp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes UseProp(global::Protobuf.PropMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UseProp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes UseProp(global::Protobuf.PropMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UseProp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> UsePropAsync(global::Protobuf.PropMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UsePropAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> UsePropAsync(global::Protobuf.PropMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UseProp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes ThrowProp(global::Protobuf.PropMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ThrowProp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes ThrowProp(global::Protobuf.PropMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ThrowProp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> ThrowPropAsync(global::Protobuf.PropMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ThrowPropAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> ThrowPropAsync(global::Protobuf.PropMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ThrowProp, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes UseSkill(global::Protobuf.SkillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UseSkill(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes UseSkill(global::Protobuf.SkillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UseSkill, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> UseSkillAsync(global::Protobuf.SkillMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UseSkillAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> UseSkillAsync(global::Protobuf.SkillMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UseSkill, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes SendMessage(global::Protobuf.SendMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendMessage(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes SendMessage(global::Protobuf.SendMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendMessage, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> SendMessageAsync(global::Protobuf.SendMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendMessageAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> SendMessageAsync(global::Protobuf.SendMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendMessage, null, options, request);
      }
      /// <summary>
      /// rpc GetMessage (IDMsg) returns (stream MsgRes);
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes StartLearning(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartLearning(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// rpc GetMessage (IDMsg) returns (stream MsgRes);
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes StartLearning(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartLearning, null, options, request);
      }
      /// <summary>
      /// rpc GetMessage (IDMsg) returns (stream MsgRes);
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> StartLearningAsync(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartLearningAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// rpc GetMessage (IDMsg) returns (stream MsgRes);
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> StartLearningAsync(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartLearning, null, options, request);
      }
      /// <summary>
      /// 开始救人
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes StartRescueMate(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartRescueMate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 开始救人
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes StartRescueMate(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartRescueMate, null, options, request);
      }
      /// <summary>
      /// 开始救人
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> StartRescueMateAsync(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartRescueMateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 开始救人
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> StartRescueMateAsync(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartRescueMate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes StartTreatMate(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartTreatMate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes StartTreatMate(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartTreatMate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> StartTreatMateAsync(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartTreatMateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> StartTreatMateAsync(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartTreatMate, null, options, request);
      }
      /// <summary>
      /// 攻击
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Attack(global::Protobuf.AttackMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Attack(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 攻击
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Attack(global::Protobuf.AttackMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Attack, null, options, request);
      }
      /// <summary>
      /// 攻击
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> AttackAsync(global::Protobuf.AttackMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AttackAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 攻击
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> AttackAsync(global::Protobuf.AttackMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Attack, null, options, request);
      }
      /// <summary>
      /// 相当于逃跑
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Graduate(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Graduate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 相当于逃跑
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes Graduate(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Graduate, null, options, request);
      }
      /// <summary>
      /// 相当于逃跑
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> GraduateAsync(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GraduateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 相当于逃跑
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> GraduateAsync(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Graduate, null, options, request);
      }
      /// <summary>
      /// 开门
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes OpenDoor(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OpenDoor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 开门
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes OpenDoor(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_OpenDoor, null, options, request);
      }
      /// <summary>
      /// 开门
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> OpenDoorAsync(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return OpenDoorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 开门
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> OpenDoorAsync(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_OpenDoor, null, options, request);
      }
      /// <summary>
      /// 关门
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes CloseDoor(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CloseDoor(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 关门
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes CloseDoor(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CloseDoor, null, options, request);
      }
      /// <summary>
      /// 关门
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> CloseDoorAsync(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CloseDoorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 关门
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> CloseDoorAsync(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CloseDoor, null, options, request);
      }
      /// <summary>
      /// 窗户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes SkipWindow(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SkipWindow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 窗户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes SkipWindow(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SkipWindow, null, options, request);
      }
      /// <summary>
      /// 窗户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> SkipWindowAsync(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SkipWindowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 窗户
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> SkipWindowAsync(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SkipWindow, null, options, request);
      }
      /// <summary>
      /// 开闸门
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes StartOpenGate(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartOpenGate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 开闸门
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes StartOpenGate(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartOpenGate, null, options, request);
      }
      /// <summary>
      /// 开闸门
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> StartOpenGateAsync(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartOpenGateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 开闸门
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> StartOpenGateAsync(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartOpenGate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes StartOpenChest(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartOpenChest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes StartOpenChest(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartOpenChest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> StartOpenChestAsync(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartOpenChestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> StartOpenChestAsync(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartOpenChest, null, options, request);
      }
      /// <summary>
      /// 结束所有动作
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes EndAllAction(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EndAllAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 结束所有动作
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Protobuf.BoolRes EndAllAction(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EndAllAction, null, options, request);
      }
      /// <summary>
      /// 结束所有动作
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> EndAllActionAsync(global::Protobuf.IDMsg request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EndAllActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// 结束所有动作
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Protobuf.BoolRes> EndAllActionAsync(global::Protobuf.IDMsg request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EndAllAction, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override AvailableServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new AvailableServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(AvailableServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_TryConnection, serviceImpl.TryConnection)
          .AddMethod(__Method_AddPlayer, serviceImpl.AddPlayer)
          .AddMethod(__Method_Move, serviceImpl.Move)
          .AddMethod(__Method_PickProp, serviceImpl.PickProp)
          .AddMethod(__Method_UseProp, serviceImpl.UseProp)
          .AddMethod(__Method_ThrowProp, serviceImpl.ThrowProp)
          .AddMethod(__Method_UseSkill, serviceImpl.UseSkill)
          .AddMethod(__Method_SendMessage, serviceImpl.SendMessage)
          .AddMethod(__Method_StartLearning, serviceImpl.StartLearning)
          .AddMethod(__Method_StartRescueMate, serviceImpl.StartRescueMate)
          .AddMethod(__Method_StartTreatMate, serviceImpl.StartTreatMate)
          .AddMethod(__Method_Attack, serviceImpl.Attack)
          .AddMethod(__Method_Graduate, serviceImpl.Graduate)
          .AddMethod(__Method_OpenDoor, serviceImpl.OpenDoor)
          .AddMethod(__Method_CloseDoor, serviceImpl.CloseDoor)
          .AddMethod(__Method_SkipWindow, serviceImpl.SkipWindow)
          .AddMethod(__Method_StartOpenGate, serviceImpl.StartOpenGate)
          .AddMethod(__Method_StartOpenChest, serviceImpl.StartOpenChest)
          .AddMethod(__Method_EndAllAction, serviceImpl.EndAllAction).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, AvailableServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_TryConnection, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(serviceImpl.TryConnection));
      serviceBinder.AddMethod(__Method_AddPlayer, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Protobuf.PlayerMsg, global::Protobuf.MessageToClient>(serviceImpl.AddPlayer));
      serviceBinder.AddMethod(__Method_Move, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.MoveMsg, global::Protobuf.MoveRes>(serviceImpl.Move));
      serviceBinder.AddMethod(__Method_PickProp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.PropMsg, global::Protobuf.BoolRes>(serviceImpl.PickProp));
      serviceBinder.AddMethod(__Method_UseProp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.PropMsg, global::Protobuf.BoolRes>(serviceImpl.UseProp));
      serviceBinder.AddMethod(__Method_ThrowProp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.PropMsg, global::Protobuf.BoolRes>(serviceImpl.ThrowProp));
      serviceBinder.AddMethod(__Method_UseSkill, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.SkillMsg, global::Protobuf.BoolRes>(serviceImpl.UseSkill));
      serviceBinder.AddMethod(__Method_SendMessage, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.SendMsg, global::Protobuf.BoolRes>(serviceImpl.SendMessage));
      serviceBinder.AddMethod(__Method_StartLearning, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(serviceImpl.StartLearning));
      serviceBinder.AddMethod(__Method_StartRescueMate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(serviceImpl.StartRescueMate));
      serviceBinder.AddMethod(__Method_StartTreatMate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(serviceImpl.StartTreatMate));
      serviceBinder.AddMethod(__Method_Attack, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.AttackMsg, global::Protobuf.BoolRes>(serviceImpl.Attack));
      serviceBinder.AddMethod(__Method_Graduate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(serviceImpl.Graduate));
      serviceBinder.AddMethod(__Method_OpenDoor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(serviceImpl.OpenDoor));
      serviceBinder.AddMethod(__Method_CloseDoor, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(serviceImpl.CloseDoor));
      serviceBinder.AddMethod(__Method_SkipWindow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(serviceImpl.SkipWindow));
      serviceBinder.AddMethod(__Method_StartOpenGate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(serviceImpl.StartOpenGate));
      serviceBinder.AddMethod(__Method_StartOpenChest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(serviceImpl.StartOpenChest));
      serviceBinder.AddMethod(__Method_EndAllAction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Protobuf.IDMsg, global::Protobuf.BoolRes>(serviceImpl.EndAllAction));
    }

  }
}
#endregion
