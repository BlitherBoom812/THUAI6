// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message2Clients.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021009 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>   // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "MessageType.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Message2Clients_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal
{
    class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Message2Clients_2eproto
{
    static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Message2Clients_2eproto;
namespace protobuf
{
    class BoolRes;
    struct BoolResDefaultTypeInternal;
    extern BoolResDefaultTypeInternal _BoolRes_default_instance_;
    class MessageOfBombedBullet;
    struct MessageOfBombedBulletDefaultTypeInternal;
    extern MessageOfBombedBulletDefaultTypeInternal _MessageOfBombedBullet_default_instance_;
    class MessageOfBullet;
    struct MessageOfBulletDefaultTypeInternal;
    extern MessageOfBulletDefaultTypeInternal _MessageOfBullet_default_instance_;
    class MessageOfMap;
    struct MessageOfMapDefaultTypeInternal;
    extern MessageOfMapDefaultTypeInternal _MessageOfMap_default_instance_;
    class MessageOfMap_Row;
    struct MessageOfMap_RowDefaultTypeInternal;
    extern MessageOfMap_RowDefaultTypeInternal _MessageOfMap_Row_default_instance_;
    class MessageOfPickedProp;
    struct MessageOfPickedPropDefaultTypeInternal;
    extern MessageOfPickedPropDefaultTypeInternal _MessageOfPickedProp_default_instance_;
    class MessageOfProp;
    struct MessageOfPropDefaultTypeInternal;
    extern MessageOfPropDefaultTypeInternal _MessageOfProp_default_instance_;
    class MessageOfStudent;
    struct MessageOfStudentDefaultTypeInternal;
    extern MessageOfStudentDefaultTypeInternal _MessageOfStudent_default_instance_;
    class MessageOfTricker;
    struct MessageOfTrickerDefaultTypeInternal;
    extern MessageOfTrickerDefaultTypeInternal _MessageOfTricker_default_instance_;
    class MessageToClient;
    struct MessageToClientDefaultTypeInternal;
    extern MessageToClientDefaultTypeInternal _MessageToClient_default_instance_;
    class MoveRes;
    struct MoveResDefaultTypeInternal;
    extern MoveResDefaultTypeInternal _MoveRes_default_instance_;
    class MsgRes;
    struct MsgResDefaultTypeInternal;
    extern MsgResDefaultTypeInternal _MsgRes_default_instance_;
}  // namespace protobuf
PROTOBUF_NAMESPACE_OPEN
template<>
::protobuf::BoolRes* Arena::CreateMaybeMessage<::protobuf::BoolRes>(Arena*);
template<>
::protobuf::MessageOfBombedBullet* Arena::CreateMaybeMessage<::protobuf::MessageOfBombedBullet>(Arena*);
template<>
::protobuf::MessageOfBullet* Arena::CreateMaybeMessage<::protobuf::MessageOfBullet>(Arena*);
template<>
::protobuf::MessageOfMap* Arena::CreateMaybeMessage<::protobuf::MessageOfMap>(Arena*);
template<>
::protobuf::MessageOfMap_Row* Arena::CreateMaybeMessage<::protobuf::MessageOfMap_Row>(Arena*);
template<>
::protobuf::MessageOfPickedProp* Arena::CreateMaybeMessage<::protobuf::MessageOfPickedProp>(Arena*);
template<>
::protobuf::MessageOfProp* Arena::CreateMaybeMessage<::protobuf::MessageOfProp>(Arena*);
template<>
::protobuf::MessageOfStudent* Arena::CreateMaybeMessage<::protobuf::MessageOfStudent>(Arena*);
template<>
::protobuf::MessageOfTricker* Arena::CreateMaybeMessage<::protobuf::MessageOfTricker>(Arena*);
template<>
::protobuf::MessageToClient* Arena::CreateMaybeMessage<::protobuf::MessageToClient>(Arena*);
template<>
::protobuf::MoveRes* Arena::CreateMaybeMessage<::protobuf::MoveRes>(Arena*);
template<>
::protobuf::MsgRes* Arena::CreateMaybeMessage<::protobuf::MsgRes>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace protobuf
{

    // ===================================================================

    class MessageOfStudent final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfStudent) */
    {
    public:
        inline MessageOfStudent() :
            MessageOfStudent(nullptr)
        {
        }
        ~MessageOfStudent() override;
        explicit PROTOBUF_CONSTEXPR MessageOfStudent(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfStudent(const MessageOfStudent& from);
        MessageOfStudent(MessageOfStudent&& from) noexcept
            :
            MessageOfStudent()
        {
            *this = ::std::move(from);
        }

        inline MessageOfStudent& operator=(const MessageOfStudent& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfStudent& operator=(MessageOfStudent&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfStudent& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfStudent* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfStudent*>(
                &_MessageOfStudent_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            0;

        friend void swap(MessageOfStudent& a, MessageOfStudent& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfStudent* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfStudent* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfStudent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfStudent>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfStudent& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfStudent& from)
        {
            MessageOfStudent::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfStudent* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfStudent";
        }

    protected:
        explicit MessageOfStudent(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kBuffFieldNumber = 19,
            kXFieldNumber = 1,
            kYFieldNumber = 2,
            kSpeedFieldNumber = 3,
            kDeterminationFieldNumber = 4,
            kTimeUntilSkillAvailableFieldNumber = 6,
            kFailNumFieldNumber = 5,
            kPlaceFieldNumber = 7,
            kPropFieldNumber = 8,
            kStudentTypeFieldNumber = 9,
            kGuidFieldNumber = 10,
            kFailTimeFieldNumber = 12,
            kStateFieldNumber = 11,
            kViewRangeFieldNumber = 16,
            kEmoTimeFieldNumber = 14,
            kPlayerIdFieldNumber = 15,
            kRadiusFieldNumber = 17,
            kDamageFieldNumber = 18,
        };
        // repeated .protobuf.StudentBuffType buff = 19;
        int buff_size() const;

    private:
        int _internal_buff_size() const;

    public:
        void clear_buff();

    private:
        ::protobuf::StudentBuffType _internal_buff(int index) const;
        void _internal_add_buff(::protobuf::StudentBuffType value);
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_buff();

    public:
        ::protobuf::StudentBuffType buff(int index) const;
        void set_buff(int index, ::protobuf::StudentBuffType value);
        void add_buff(::protobuf::StudentBuffType value);
        const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& buff() const;
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_buff();

        // int32 x = 1;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // int32 y = 2;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // int32 speed = 3;
        void clear_speed();
        int32_t speed() const;
        void set_speed(int32_t value);

    private:
        int32_t _internal_speed() const;
        void _internal_set_speed(int32_t value);

    public:
        // int32 determination = 4;
        void clear_determination();
        int32_t determination() const;
        void set_determination(int32_t value);

    private:
        int32_t _internal_determination() const;
        void _internal_set_determination(int32_t value);

    public:
        // double time_until_skill_available = 6;
        void clear_time_until_skill_available();
        double time_until_skill_available() const;
        void set_time_until_skill_available(double value);

    private:
        double _internal_time_until_skill_available() const;
        void _internal_set_time_until_skill_available(double value);

    public:
        // int32 fail_num = 5;
        void clear_fail_num();
        int32_t fail_num() const;
        void set_fail_num(int32_t value);

    private:
        int32_t _internal_fail_num() const;
        void _internal_set_fail_num(int32_t value);

    public:
        // .protobuf.PlaceType place = 7;
        void clear_place();
        ::protobuf::PlaceType place() const;
        void set_place(::protobuf::PlaceType value);

    private:
        ::protobuf::PlaceType _internal_place() const;
        void _internal_set_place(::protobuf::PlaceType value);

    public:
        // .protobuf.PropType prop = 8;
        void clear_prop();
        ::protobuf::PropType prop() const;
        void set_prop(::protobuf::PropType value);

    private:
        ::protobuf::PropType _internal_prop() const;
        void _internal_set_prop(::protobuf::PropType value);

    public:
        // .protobuf.StudentType student_type = 9;
        void clear_student_type();
        ::protobuf::StudentType student_type() const;
        void set_student_type(::protobuf::StudentType value);

    private:
        ::protobuf::StudentType _internal_student_type() const;
        void _internal_set_student_type(::protobuf::StudentType value);

    public:
        // int64 guid = 10;
        void clear_guid();
        int64_t guid() const;
        void set_guid(int64_t value);

    private:
        int64_t _internal_guid() const;
        void _internal_set_guid(int64_t value);

    public:
        // double fail_time = 12;
        void clear_fail_time();
        double fail_time() const;
        void set_fail_time(double value);

    private:
        double _internal_fail_time() const;
        void _internal_set_fail_time(double value);

    public:
        // .protobuf.StudentState state = 11;
        void clear_state();
        ::protobuf::StudentState state() const;
        void set_state(::protobuf::StudentState value);

    private:
        ::protobuf::StudentState _internal_state() const;
        void _internal_set_state(::protobuf::StudentState value);

    public:
        // int32 view_range = 16;
        void clear_view_range();
        int32_t view_range() const;
        void set_view_range(int32_t value);

    private:
        int32_t _internal_view_range() const;
        void _internal_set_view_range(int32_t value);

    public:
        // double emo_time = 14;
        void clear_emo_time();
        double emo_time() const;
        void set_emo_time(double value);

    private:
        double _internal_emo_time() const;
        void _internal_set_emo_time(double value);

    public:
        // int64 player_id = 15;
        void clear_player_id();
        int64_t player_id() const;
        void set_player_id(int64_t value);

    private:
        int64_t _internal_player_id() const;
        void _internal_set_player_id(int64_t value);

    public:
        // int32 radius = 17;
        void clear_radius();
        int32_t radius() const;
        void set_radius(int32_t value);

    private:
        int32_t _internal_radius() const;
        void _internal_set_radius(int32_t value);

    public:
        // int32 damage = 18;
        void clear_damage();
        int32_t damage() const;
        void set_damage(int32_t value);

    private:
        int32_t _internal_damage() const;
        void _internal_set_damage(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfStudent)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> buff_;
            mutable std::atomic<int> _buff_cached_byte_size_;
            int32_t x_;
            int32_t y_;
            int32_t speed_;
            int32_t determination_;
            double time_until_skill_available_;
            int32_t fail_num_;
            int place_;
            int prop_;
            int student_type_;
            int64_t guid_;
            double fail_time_;
            int state_;
            int32_t view_range_;
            double emo_time_;
            int64_t player_id_;
            int32_t radius_;
            int32_t damage_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfTricker final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfTricker) */
    {
    public:
        inline MessageOfTricker() :
            MessageOfTricker(nullptr)
        {
        }
        ~MessageOfTricker() override;
        explicit PROTOBUF_CONSTEXPR MessageOfTricker(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfTricker(const MessageOfTricker& from);
        MessageOfTricker(MessageOfTricker&& from) noexcept
            :
            MessageOfTricker()
        {
            *this = ::std::move(from);
        }

        inline MessageOfTricker& operator=(const MessageOfTricker& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfTricker& operator=(MessageOfTricker&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfTricker& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfTricker* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfTricker*>(
                &_MessageOfTricker_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            1;

        friend void swap(MessageOfTricker& a, MessageOfTricker& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfTricker* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfTricker* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfTricker* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfTricker>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfTricker& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfTricker& from)
        {
            MessageOfTricker::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfTricker* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfTricker";
        }

    protected:
        explicit MessageOfTricker(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kBuffFieldNumber = 14,
            kXFieldNumber = 1,
            kYFieldNumber = 2,
            kSpeedFieldNumber = 3,
            kDamageFieldNumber = 4,
            kTimeUntilSkillAvailableFieldNumber = 5,
            kPlaceFieldNumber = 6,
            kPropFieldNumber = 7,
            kGuidFieldNumber = 9,
            kTrickerTypeFieldNumber = 8,
            kMovableFieldNumber = 10,
            kPlayerIdFieldNumber = 11,
            kViewRangeFieldNumber = 12,
            kRadiusFieldNumber = 13,
        };
        // repeated .protobuf.TrickerBuffType buff = 14;
        int buff_size() const;

    private:
        int _internal_buff_size() const;

    public:
        void clear_buff();

    private:
        ::protobuf::TrickerBuffType _internal_buff(int index) const;
        void _internal_add_buff(::protobuf::TrickerBuffType value);
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_buff();

    public:
        ::protobuf::TrickerBuffType buff(int index) const;
        void set_buff(int index, ::protobuf::TrickerBuffType value);
        void add_buff(::protobuf::TrickerBuffType value);
        const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& buff() const;
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_buff();

        // int32 x = 1;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // int32 y = 2;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // int32 speed = 3;
        void clear_speed();
        int32_t speed() const;
        void set_speed(int32_t value);

    private:
        int32_t _internal_speed() const;
        void _internal_set_speed(int32_t value);

    public:
        // int32 damage = 4;
        void clear_damage();
        int32_t damage() const;
        void set_damage(int32_t value);

    private:
        int32_t _internal_damage() const;
        void _internal_set_damage(int32_t value);

    public:
        // double time_until_skill_available = 5;
        void clear_time_until_skill_available();
        double time_until_skill_available() const;
        void set_time_until_skill_available(double value);

    private:
        double _internal_time_until_skill_available() const;
        void _internal_set_time_until_skill_available(double value);

    public:
        // .protobuf.PlaceType place = 6;
        void clear_place();
        ::protobuf::PlaceType place() const;
        void set_place(::protobuf::PlaceType value);

    private:
        ::protobuf::PlaceType _internal_place() const;
        void _internal_set_place(::protobuf::PlaceType value);

    public:
        // .protobuf.PropType prop = 7;
        void clear_prop();
        ::protobuf::PropType prop() const;
        void set_prop(::protobuf::PropType value);

    private:
        ::protobuf::PropType _internal_prop() const;
        void _internal_set_prop(::protobuf::PropType value);

    public:
        // int64 guid = 9;
        void clear_guid();
        int64_t guid() const;
        void set_guid(int64_t value);

    private:
        int64_t _internal_guid() const;
        void _internal_set_guid(int64_t value);

    public:
        // .protobuf.TrickerType tricker_type = 8;
        void clear_tricker_type();
        ::protobuf::TrickerType tricker_type() const;
        void set_tricker_type(::protobuf::TrickerType value);

    private:
        ::protobuf::TrickerType _internal_tricker_type() const;
        void _internal_set_tricker_type(::protobuf::TrickerType value);

    public:
        // bool movable = 10;
        void clear_movable();
        bool movable() const;
        void set_movable(bool value);

    private:
        bool _internal_movable() const;
        void _internal_set_movable(bool value);

    public:
        // int64 player_id = 11;
        void clear_player_id();
        int64_t player_id() const;
        void set_player_id(int64_t value);

    private:
        int64_t _internal_player_id() const;
        void _internal_set_player_id(int64_t value);

    public:
        // int32 view_range = 12;
        void clear_view_range();
        int32_t view_range() const;
        void set_view_range(int32_t value);

    private:
        int32_t _internal_view_range() const;
        void _internal_set_view_range(int32_t value);

    public:
        // int32 radius = 13;
        void clear_radius();
        int32_t radius() const;
        void set_radius(int32_t value);

    private:
        int32_t _internal_radius() const;
        void _internal_set_radius(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfTricker)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> buff_;
            mutable std::atomic<int> _buff_cached_byte_size_;
            int32_t x_;
            int32_t y_;
            int32_t speed_;
            int32_t damage_;
            double time_until_skill_available_;
            int place_;
            int prop_;
            int64_t guid_;
            int tricker_type_;
            bool movable_;
            int64_t player_id_;
            int32_t view_range_;
            int32_t radius_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfBullet final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfBullet) */
    {
    public:
        inline MessageOfBullet() :
            MessageOfBullet(nullptr)
        {
        }
        ~MessageOfBullet() override;
        explicit PROTOBUF_CONSTEXPR MessageOfBullet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfBullet(const MessageOfBullet& from);
        MessageOfBullet(MessageOfBullet&& from) noexcept
            :
            MessageOfBullet()
        {
            *this = ::std::move(from);
        }

        inline MessageOfBullet& operator=(const MessageOfBullet& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfBullet& operator=(MessageOfBullet&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfBullet& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfBullet* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfBullet*>(
                &_MessageOfBullet_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            2;

        friend void swap(MessageOfBullet& a, MessageOfBullet& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfBullet* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfBullet* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfBullet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfBullet>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfBullet& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfBullet& from)
        {
            MessageOfBullet::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfBullet* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfBullet";
        }

    protected:
        explicit MessageOfBullet(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kTypeFieldNumber = 1,
            kXFieldNumber = 2,
            kFacingDirectionFieldNumber = 4,
            kGuidFieldNumber = 5,
            kYFieldNumber = 3,
            kPlaceFieldNumber = 7,
            kParentTeamIdFieldNumber = 6,
            kBombRangeFieldNumber = 8,
        };
        // .protobuf.BulletType type = 1;
        void clear_type();
        ::protobuf::BulletType type() const;
        void set_type(::protobuf::BulletType value);

    private:
        ::protobuf::BulletType _internal_type() const;
        void _internal_set_type(::protobuf::BulletType value);

    public:
        // int32 x = 2;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // double facing_direction = 4;
        void clear_facing_direction();
        double facing_direction() const;
        void set_facing_direction(double value);

    private:
        double _internal_facing_direction() const;
        void _internal_set_facing_direction(double value);

    public:
        // int64 guid = 5;
        void clear_guid();
        int64_t guid() const;
        void set_guid(int64_t value);

    private:
        int64_t _internal_guid() const;
        void _internal_set_guid(int64_t value);

    public:
        // int32 y = 3;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // .protobuf.PlaceType place = 7;
        void clear_place();
        ::protobuf::PlaceType place() const;
        void set_place(::protobuf::PlaceType value);

    private:
        ::protobuf::PlaceType _internal_place() const;
        void _internal_set_place(::protobuf::PlaceType value);

    public:
        // int64 parent_team_id = 6;
        void clear_parent_team_id();
        int64_t parent_team_id() const;
        void set_parent_team_id(int64_t value);

    private:
        int64_t _internal_parent_team_id() const;
        void _internal_set_parent_team_id(int64_t value);

    public:
        // double bomb_range = 8;
        void clear_bomb_range();
        double bomb_range() const;
        void set_bomb_range(double value);

    private:
        double _internal_bomb_range() const;
        void _internal_set_bomb_range(double value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfBullet)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int type_;
            int32_t x_;
            double facing_direction_;
            int64_t guid_;
            int32_t y_;
            int place_;
            int64_t parent_team_id_;
            double bomb_range_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfBombedBullet final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfBombedBullet) */
    {
    public:
        inline MessageOfBombedBullet() :
            MessageOfBombedBullet(nullptr)
        {
        }
        ~MessageOfBombedBullet() override;
        explicit PROTOBUF_CONSTEXPR MessageOfBombedBullet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfBombedBullet(const MessageOfBombedBullet& from);
        MessageOfBombedBullet(MessageOfBombedBullet&& from) noexcept
            :
            MessageOfBombedBullet()
        {
            *this = ::std::move(from);
        }

        inline MessageOfBombedBullet& operator=(const MessageOfBombedBullet& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfBombedBullet& operator=(MessageOfBombedBullet&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfBombedBullet& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfBombedBullet* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfBombedBullet*>(
                &_MessageOfBombedBullet_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            3;

        friend void swap(MessageOfBombedBullet& a, MessageOfBombedBullet& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfBombedBullet* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfBombedBullet* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfBombedBullet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfBombedBullet>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfBombedBullet& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfBombedBullet& from)
        {
            MessageOfBombedBullet::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfBombedBullet* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfBombedBullet";
        }

    protected:
        explicit MessageOfBombedBullet(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kTypeFieldNumber = 1,
            kXFieldNumber = 2,
            kFacingDirectionFieldNumber = 4,
            kMappingIdFieldNumber = 5,
            kBombRangeFieldNumber = 6,
            kYFieldNumber = 3,
        };
        // .protobuf.BulletType type = 1;
        void clear_type();
        ::protobuf::BulletType type() const;
        void set_type(::protobuf::BulletType value);

    private:
        ::protobuf::BulletType _internal_type() const;
        void _internal_set_type(::protobuf::BulletType value);

    public:
        // int32 x = 2;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // double facing_direction = 4;
        void clear_facing_direction();
        double facing_direction() const;
        void set_facing_direction(double value);

    private:
        double _internal_facing_direction() const;
        void _internal_set_facing_direction(double value);

    public:
        // int64 mapping_id = 5;
        void clear_mapping_id();
        int64_t mapping_id() const;
        void set_mapping_id(int64_t value);

    private:
        int64_t _internal_mapping_id() const;
        void _internal_set_mapping_id(int64_t value);

    public:
        // double bomb_range = 6;
        void clear_bomb_range();
        double bomb_range() const;
        void set_bomb_range(double value);

    private:
        double _internal_bomb_range() const;
        void _internal_set_bomb_range(double value);

    public:
        // int32 y = 3;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfBombedBullet)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int type_;
            int32_t x_;
            double facing_direction_;
            int64_t mapping_id_;
            double bomb_range_;
            int32_t y_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfProp final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfProp) */
    {
    public:
        inline MessageOfProp() :
            MessageOfProp(nullptr)
        {
        }
        ~MessageOfProp() override;
        explicit PROTOBUF_CONSTEXPR MessageOfProp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfProp(const MessageOfProp& from);
        MessageOfProp(MessageOfProp&& from) noexcept
            :
            MessageOfProp()
        {
            *this = ::std::move(from);
        }

        inline MessageOfProp& operator=(const MessageOfProp& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfProp& operator=(MessageOfProp&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfProp& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfProp* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfProp*>(
                &_MessageOfProp_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            4;

        friend void swap(MessageOfProp& a, MessageOfProp& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfProp* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfProp* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfProp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfProp>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfProp& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfProp& from)
        {
            MessageOfProp::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfProp* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfProp";
        }

    protected:
        explicit MessageOfProp(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kTypeFieldNumber = 1,
            kXFieldNumber = 2,
            kFacingDirectionFieldNumber = 4,
            kYFieldNumber = 3,
            kPlaceFieldNumber = 6,
            kGuidFieldNumber = 5,
            kSizeFieldNumber = 7,
            kIsMovingFieldNumber = 8,
        };
        // .protobuf.PropType type = 1;
        void clear_type();
        ::protobuf::PropType type() const;
        void set_type(::protobuf::PropType value);

    private:
        ::protobuf::PropType _internal_type() const;
        void _internal_set_type(::protobuf::PropType value);

    public:
        // int32 x = 2;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // double facing_direction = 4;
        void clear_facing_direction();
        double facing_direction() const;
        void set_facing_direction(double value);

    private:
        double _internal_facing_direction() const;
        void _internal_set_facing_direction(double value);

    public:
        // int32 y = 3;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // .protobuf.PlaceType place = 6;
        void clear_place();
        ::protobuf::PlaceType place() const;
        void set_place(::protobuf::PlaceType value);

    private:
        ::protobuf::PlaceType _internal_place() const;
        void _internal_set_place(::protobuf::PlaceType value);

    public:
        // int64 guid = 5;
        void clear_guid();
        int64_t guid() const;
        void set_guid(int64_t value);

    private:
        int64_t _internal_guid() const;
        void _internal_set_guid(int64_t value);

    public:
        // int32 size = 7;
        void clear_size();
        int32_t size() const;
        void set_size(int32_t value);

    private:
        int32_t _internal_size() const;
        void _internal_set_size(int32_t value);

    public:
        // bool is_moving = 8;
        void clear_is_moving();
        bool is_moving() const;
        void set_is_moving(bool value);

    private:
        bool _internal_is_moving() const;
        void _internal_set_is_moving(bool value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfProp)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int type_;
            int32_t x_;
            double facing_direction_;
            int32_t y_;
            int place_;
            int64_t guid_;
            int32_t size_;
            bool is_moving_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfPickedProp final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfPickedProp) */
    {
    public:
        inline MessageOfPickedProp() :
            MessageOfPickedProp(nullptr)
        {
        }
        ~MessageOfPickedProp() override;
        explicit PROTOBUF_CONSTEXPR MessageOfPickedProp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfPickedProp(const MessageOfPickedProp& from);
        MessageOfPickedProp(MessageOfPickedProp&& from) noexcept
            :
            MessageOfPickedProp()
        {
            *this = ::std::move(from);
        }

        inline MessageOfPickedProp& operator=(const MessageOfPickedProp& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfPickedProp& operator=(MessageOfPickedProp&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfPickedProp& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfPickedProp* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfPickedProp*>(
                &_MessageOfPickedProp_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            5;

        friend void swap(MessageOfPickedProp& a, MessageOfPickedProp& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfPickedProp* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfPickedProp* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfPickedProp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfPickedProp>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfPickedProp& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfPickedProp& from)
        {
            MessageOfPickedProp::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfPickedProp* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfPickedProp";
        }

    protected:
        explicit MessageOfPickedProp(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kTypeFieldNumber = 1,
            kXFieldNumber = 2,
            kFacingDirectionFieldNumber = 4,
            kMappingIdFieldNumber = 5,
            kYFieldNumber = 3,
        };
        // .protobuf.PropType type = 1;
        void clear_type();
        ::protobuf::PropType type() const;
        void set_type(::protobuf::PropType value);

    private:
        ::protobuf::PropType _internal_type() const;
        void _internal_set_type(::protobuf::PropType value);

    public:
        // int32 x = 2;
        void clear_x();
        int32_t x() const;
        void set_x(int32_t value);

    private:
        int32_t _internal_x() const;
        void _internal_set_x(int32_t value);

    public:
        // double facing_direction = 4;
        void clear_facing_direction();
        double facing_direction() const;
        void set_facing_direction(double value);

    private:
        double _internal_facing_direction() const;
        void _internal_set_facing_direction(double value);

    public:
        // int64 mapping_id = 5;
        void clear_mapping_id();
        int64_t mapping_id() const;
        void set_mapping_id(int64_t value);

    private:
        int64_t _internal_mapping_id() const;
        void _internal_set_mapping_id(int64_t value);

    public:
        // int32 y = 3;
        void clear_y();
        int32_t y() const;
        void set_y(int32_t value);

    private:
        int32_t _internal_y() const;
        void _internal_set_y(int32_t value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageOfPickedProp)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int type_;
            int32_t x_;
            double facing_direction_;
            int64_t mapping_id_;
            int32_t y_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfMap_Row final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfMap.Row) */
    {
    public:
        inline MessageOfMap_Row() :
            MessageOfMap_Row(nullptr)
        {
        }
        ~MessageOfMap_Row() override;
        explicit PROTOBUF_CONSTEXPR MessageOfMap_Row(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfMap_Row(const MessageOfMap_Row& from);
        MessageOfMap_Row(MessageOfMap_Row&& from) noexcept
            :
            MessageOfMap_Row()
        {
            *this = ::std::move(from);
        }

        inline MessageOfMap_Row& operator=(const MessageOfMap_Row& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfMap_Row& operator=(MessageOfMap_Row&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfMap_Row& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfMap_Row* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfMap_Row*>(
                &_MessageOfMap_Row_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            6;

        friend void swap(MessageOfMap_Row& a, MessageOfMap_Row& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfMap_Row* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfMap_Row* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfMap_Row* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfMap_Row>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfMap_Row& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfMap_Row& from)
        {
            MessageOfMap_Row::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfMap_Row* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfMap.Row";
        }

    protected:
        explicit MessageOfMap_Row(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kColFieldNumber = 1,
        };
        // repeated .protobuf.PlaceType col = 1;
        int col_size() const;

    private:
        int _internal_col_size() const;

    public:
        void clear_col();

    private:
        ::protobuf::PlaceType _internal_col(int index) const;
        void _internal_add_col(::protobuf::PlaceType value);
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_col();

    public:
        ::protobuf::PlaceType col(int index) const;
        void set_col(int index, ::protobuf::PlaceType value);
        void add_col(::protobuf::PlaceType value);
        const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& col() const;
        ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_col();

        // @@protoc_insertion_point(class_scope:protobuf.MessageOfMap.Row)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> col_;
            mutable std::atomic<int> _col_cached_byte_size_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageOfMap final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageOfMap) */
    {
    public:
        inline MessageOfMap() :
            MessageOfMap(nullptr)
        {
        }
        ~MessageOfMap() override;
        explicit PROTOBUF_CONSTEXPR MessageOfMap(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageOfMap(const MessageOfMap& from);
        MessageOfMap(MessageOfMap&& from) noexcept
            :
            MessageOfMap()
        {
            *this = ::std::move(from);
        }

        inline MessageOfMap& operator=(const MessageOfMap& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageOfMap& operator=(MessageOfMap&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageOfMap& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageOfMap* internal_default_instance()
        {
            return reinterpret_cast<const MessageOfMap*>(
                &_MessageOfMap_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            7;

        friend void swap(MessageOfMap& a, MessageOfMap& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageOfMap* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageOfMap* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageOfMap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageOfMap>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageOfMap& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageOfMap& from)
        {
            MessageOfMap::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageOfMap* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageOfMap";
        }

    protected:
        explicit MessageOfMap(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        typedef MessageOfMap_Row Row;

        // accessors -------------------------------------------------------

        enum : int
        {
            kRowFieldNumber = 2,
        };
        // repeated .protobuf.MessageOfMap.Row row = 2;
        int row_size() const;

    private:
        int _internal_row_size() const;

    public:
        void clear_row();
        ::protobuf::MessageOfMap_Row* mutable_row(int index);
        ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row>*
            mutable_row();

    private:
        const ::protobuf::MessageOfMap_Row& _internal_row(int index) const;
        ::protobuf::MessageOfMap_Row* _internal_add_row();

    public:
        const ::protobuf::MessageOfMap_Row& row(int index) const;
        ::protobuf::MessageOfMap_Row* add_row();
        const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row>&
            row() const;

        // @@protoc_insertion_point(class_scope:protobuf.MessageOfMap)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row> row_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MessageToClient final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MessageToClient) */
    {
    public:
        inline MessageToClient() :
            MessageToClient(nullptr)
        {
        }
        ~MessageToClient() override;
        explicit PROTOBUF_CONSTEXPR MessageToClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MessageToClient(const MessageToClient& from);
        MessageToClient(MessageToClient&& from) noexcept
            :
            MessageToClient()
        {
            *this = ::std::move(from);
        }

        inline MessageToClient& operator=(const MessageToClient& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MessageToClient& operator=(MessageToClient&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MessageToClient& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MessageToClient* internal_default_instance()
        {
            return reinterpret_cast<const MessageToClient*>(
                &_MessageToClient_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            8;

        friend void swap(MessageToClient& a, MessageToClient& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MessageToClient* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MessageToClient* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MessageToClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MessageToClient>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MessageToClient& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MessageToClient& from)
        {
            MessageToClient::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MessageToClient* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MessageToClient";
        }

    protected:
        explicit MessageToClient(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kStudentMessageFieldNumber = 1,
            kTrickerMessageFieldNumber = 2,
            kPropMessageFieldNumber = 3,
            kBulletMessageFieldNumber = 4,
            kBombedBulletMessageFieldNumber = 5,
            kMapMessageFieldNumber = 6,
            kGameStateFieldNumber = 7,
        };
        // repeated .protobuf.MessageOfStudent student_message = 1;
        int student_message_size() const;

    private:
        int _internal_student_message_size() const;

    public:
        void clear_student_message();
        ::protobuf::MessageOfStudent* mutable_student_message(int index);
        ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfStudent>*
            mutable_student_message();

    private:
        const ::protobuf::MessageOfStudent& _internal_student_message(int index) const;
        ::protobuf::MessageOfStudent* _internal_add_student_message();

    public:
        const ::protobuf::MessageOfStudent& student_message(int index) const;
        ::protobuf::MessageOfStudent* add_student_message();
        const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfStudent>&
            student_message() const;

        // repeated .protobuf.MessageOfTricker tricker_message = 2;
        int tricker_message_size() const;

    private:
        int _internal_tricker_message_size() const;

    public:
        void clear_tricker_message();
        ::protobuf::MessageOfTricker* mutable_tricker_message(int index);
        ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfTricker>*
            mutable_tricker_message();

    private:
        const ::protobuf::MessageOfTricker& _internal_tricker_message(int index) const;
        ::protobuf::MessageOfTricker* _internal_add_tricker_message();

    public:
        const ::protobuf::MessageOfTricker& tricker_message(int index) const;
        ::protobuf::MessageOfTricker* add_tricker_message();
        const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfTricker>&
            tricker_message() const;

        // repeated .protobuf.MessageOfProp prop_message = 3;
        int prop_message_size() const;

    private:
        int _internal_prop_message_size() const;

    public:
        void clear_prop_message();
        ::protobuf::MessageOfProp* mutable_prop_message(int index);
        ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfProp>*
            mutable_prop_message();

    private:
        const ::protobuf::MessageOfProp& _internal_prop_message(int index) const;
        ::protobuf::MessageOfProp* _internal_add_prop_message();

    public:
        const ::protobuf::MessageOfProp& prop_message(int index) const;
        ::protobuf::MessageOfProp* add_prop_message();
        const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfProp>&
            prop_message() const;

        // repeated .protobuf.MessageOfBullet bullet_message = 4;
        int bullet_message_size() const;

    private:
        int _internal_bullet_message_size() const;

    public:
        void clear_bullet_message();
        ::protobuf::MessageOfBullet* mutable_bullet_message(int index);
        ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfBullet>*
            mutable_bullet_message();

    private:
        const ::protobuf::MessageOfBullet& _internal_bullet_message(int index) const;
        ::protobuf::MessageOfBullet* _internal_add_bullet_message();

    public:
        const ::protobuf::MessageOfBullet& bullet_message(int index) const;
        ::protobuf::MessageOfBullet* add_bullet_message();
        const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfBullet>&
            bullet_message() const;

        // repeated .protobuf.MessageOfBombedBullet bombed_bullet_message = 5;
        int bombed_bullet_message_size() const;

    private:
        int _internal_bombed_bullet_message_size() const;

    public:
        void clear_bombed_bullet_message();
        ::protobuf::MessageOfBombedBullet* mutable_bombed_bullet_message(int index);
        ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfBombedBullet>*
            mutable_bombed_bullet_message();

    private:
        const ::protobuf::MessageOfBombedBullet& _internal_bombed_bullet_message(int index) const;
        ::protobuf::MessageOfBombedBullet* _internal_add_bombed_bullet_message();

    public:
        const ::protobuf::MessageOfBombedBullet& bombed_bullet_message(int index) const;
        ::protobuf::MessageOfBombedBullet* add_bombed_bullet_message();
        const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfBombedBullet>&
            bombed_bullet_message() const;

        // .protobuf.MessageOfMap map_message = 6;
        bool has_map_message() const;

    private:
        bool _internal_has_map_message() const;

    public:
        void clear_map_message();
        const ::protobuf::MessageOfMap& map_message() const;
        PROTOBUF_NODISCARD ::protobuf::MessageOfMap* release_map_message();
        ::protobuf::MessageOfMap* mutable_map_message();
        void set_allocated_map_message(::protobuf::MessageOfMap* map_message);

    private:
        const ::protobuf::MessageOfMap& _internal_map_message() const;
        ::protobuf::MessageOfMap* _internal_mutable_map_message();

    public:
        void unsafe_arena_set_allocated_map_message(
            ::protobuf::MessageOfMap* map_message
        );
        ::protobuf::MessageOfMap* unsafe_arena_release_map_message();

        // .protobuf.GameState game_state = 7;
        void clear_game_state();
        ::protobuf::GameState game_state() const;
        void set_game_state(::protobuf::GameState value);

    private:
        ::protobuf::GameState _internal_game_state() const;
        void _internal_set_game_state(::protobuf::GameState value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MessageToClient)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfStudent> student_message_;
            ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfTricker> tricker_message_;
            ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfProp> prop_message_;
            ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfBullet> bullet_message_;
            ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfBombedBullet> bombed_bullet_message_;
            ::protobuf::MessageOfMap* map_message_;
            int game_state_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MoveRes final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MoveRes) */
    {
    public:
        inline MoveRes() :
            MoveRes(nullptr)
        {
        }
        ~MoveRes() override;
        explicit PROTOBUF_CONSTEXPR MoveRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MoveRes(const MoveRes& from);
        MoveRes(MoveRes&& from) noexcept
            :
            MoveRes()
        {
            *this = ::std::move(from);
        }

        inline MoveRes& operator=(const MoveRes& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MoveRes& operator=(MoveRes&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MoveRes& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MoveRes* internal_default_instance()
        {
            return reinterpret_cast<const MoveRes*>(
                &_MoveRes_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            9;

        friend void swap(MoveRes& a, MoveRes& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MoveRes* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MoveRes* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MoveRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MoveRes>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MoveRes& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MoveRes& from)
        {
            MoveRes::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MoveRes* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MoveRes";
        }

    protected:
        explicit MoveRes(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kActualSpeedFieldNumber = 1,
            kActualAngleFieldNumber = 2,
            kActSuccessFieldNumber = 3,
        };
        // int64 actual_speed = 1;
        void clear_actual_speed();
        int64_t actual_speed() const;
        void set_actual_speed(int64_t value);

    private:
        int64_t _internal_actual_speed() const;
        void _internal_set_actual_speed(int64_t value);

    public:
        // double actual_angle = 2;
        void clear_actual_angle();
        double actual_angle() const;
        void set_actual_angle(double value);

    private:
        double _internal_actual_angle() const;
        void _internal_set_actual_angle(double value);

    public:
        // bool act_success = 3;
        void clear_act_success();
        bool act_success() const;
        void set_act_success(bool value);

    private:
        bool _internal_act_success() const;
        void _internal_set_act_success(bool value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MoveRes)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            int64_t actual_speed_;
            double actual_angle_;
            bool act_success_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class BoolRes final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.BoolRes) */
    {
    public:
        inline BoolRes() :
            BoolRes(nullptr)
        {
        }
        ~BoolRes() override;
        explicit PROTOBUF_CONSTEXPR BoolRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        BoolRes(const BoolRes& from);
        BoolRes(BoolRes&& from) noexcept
            :
            BoolRes()
        {
            *this = ::std::move(from);
        }

        inline BoolRes& operator=(const BoolRes& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline BoolRes& operator=(BoolRes&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const BoolRes& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const BoolRes* internal_default_instance()
        {
            return reinterpret_cast<const BoolRes*>(
                &_BoolRes_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            10;

        friend void swap(BoolRes& a, BoolRes& b)
        {
            a.Swap(&b);
        }
        inline void Swap(BoolRes* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(BoolRes* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        BoolRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<BoolRes>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const BoolRes& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const BoolRes& from)
        {
            BoolRes::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(BoolRes* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.BoolRes";
        }

    protected:
        explicit BoolRes(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kActSuccessFieldNumber = 1,
        };
        // bool act_success = 1;
        void clear_act_success();
        bool act_success() const;
        void set_act_success(bool value);

    private:
        bool _internal_act_success() const;
        void _internal_set_act_success(bool value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.BoolRes)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            bool act_success_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // -------------------------------------------------------------------

    class MsgRes final :
        public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:protobuf.MsgRes) */
    {
    public:
        inline MsgRes() :
            MsgRes(nullptr)
        {
        }
        ~MsgRes() override;
        explicit PROTOBUF_CONSTEXPR MsgRes(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

        MsgRes(const MsgRes& from);
        MsgRes(MsgRes&& from) noexcept
            :
            MsgRes()
        {
            *this = ::std::move(from);
        }

        inline MsgRes& operator=(const MsgRes& from)
        {
            CopyFrom(from);
            return *this;
        }
        inline MsgRes& operator=(MsgRes&& from) noexcept
        {
            if (this == &from)
                return *this;
            if (GetOwningArena() == from.GetOwningArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
                && GetOwningArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
            )
            {
                InternalSwap(&from);
            }
            else
            {
                CopyFrom(from);
            }
            return *this;
        }

        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor()
        {
            return GetDescriptor();
        }
        static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor()
        {
            return default_instance().GetMetadata().descriptor;
        }
        static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection()
        {
            return default_instance().GetMetadata().reflection;
        }
        static const MsgRes& default_instance()
        {
            return *internal_default_instance();
        }
        static inline const MsgRes* internal_default_instance()
        {
            return reinterpret_cast<const MsgRes*>(
                &_MsgRes_default_instance_
            );
        }
        static constexpr int kIndexInFileMessages =
            11;

        friend void swap(MsgRes& a, MsgRes& b)
        {
            a.Swap(&b);
        }
        inline void Swap(MsgRes* other)
        {
            if (other == this)
                return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() != nullptr &&
                GetOwningArena() == other->GetOwningArena())
            {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
            if (GetOwningArena() == other->GetOwningArena())
            {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
                InternalSwap(other);
            }
            else
            {
                ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
            }
        }
        void UnsafeArenaSwap(MsgRes* other)
        {
            if (other == this)
                return;
            GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
            InternalSwap(other);
        }

        // implements Message ----------------------------------------------

        MsgRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final
        {
            return CreateMaybeMessage<MsgRes>(arena);
        }
        using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
        void CopyFrom(const MsgRes& from);
        using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
        void MergeFrom(const MsgRes& from)
        {
            MsgRes::MergeImpl(*this, from);
        }

    private:
        static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);

    public:
        PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
        bool IsInitialized() const final;

        size_t ByteSizeLong() const final;
        const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
        uint8_t* _InternalSerialize(
            uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream
        ) const final;
        int GetCachedSize() const final
        {
            return _impl_._cached_size_.Get();
        }

    private:
        void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
        void SharedDtor();
        void SetCachedSize(int size) const final;
        void InternalSwap(MsgRes* other);

    private:
        friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
        static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName()
        {
            return "protobuf.MsgRes";
        }

    protected:
        explicit MsgRes(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned = false);

    public:
        static const ClassData _class_data_;
        const ::PROTOBUF_NAMESPACE_ID::Message::ClassData* GetClassData() const final;

        ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

        // nested types ----------------------------------------------------

        // accessors -------------------------------------------------------

        enum : int
        {
            kMessageReceivedFieldNumber = 3,
            kFromPlayerIdFieldNumber = 2,
            kHaveMessageFieldNumber = 1,
        };
        // string message_received = 3;
        void clear_message_received();
        const std::string& message_received() const;
        template<typename ArgT0 = const std::string&, typename... ArgT>
        void set_message_received(ArgT0&& arg0, ArgT... args);
        std::string* mutable_message_received();
        PROTOBUF_NODISCARD std::string* release_message_received();
        void set_allocated_message_received(std::string* message_received);

    private:
        const std::string& _internal_message_received() const;
        inline PROTOBUF_ALWAYS_INLINE void _internal_set_message_received(const std::string& value);
        std::string* _internal_mutable_message_received();

    public:
        // int64 from_player_id = 2;
        void clear_from_player_id();
        int64_t from_player_id() const;
        void set_from_player_id(int64_t value);

    private:
        int64_t _internal_from_player_id() const;
        void _internal_set_from_player_id(int64_t value);

    public:
        // bool have_message = 1;
        void clear_have_message();
        bool have_message() const;
        void set_have_message(bool value);

    private:
        bool _internal_have_message() const;
        void _internal_set_have_message(bool value);

    public:
        // @@protoc_insertion_point(class_scope:protobuf.MsgRes)

    private:
        class _Internal;

        template<typename T>
        friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
        typedef void InternalArenaConstructable_;
        typedef void DestructorSkippable_;
        struct Impl_
        {
            ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_received_;
            int64_t from_player_id_;
            bool have_message_;
            mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
        };
        union
        {
            Impl_ _impl_;
        };
        friend struct ::TableStruct_Message2Clients_2eproto;
    };
    // ===================================================================

    // ===================================================================

#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
    // MessageOfStudent

    // int32 x = 1;
    inline void MessageOfStudent::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfStudent::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.x)
        return _internal_x();
    }
    inline void MessageOfStudent::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfStudent::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.x)
    }

    // int32 y = 2;
    inline void MessageOfStudent::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfStudent::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.y)
        return _internal_y();
    }
    inline void MessageOfStudent::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfStudent::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.y)
    }

    // int32 speed = 3;
    inline void MessageOfStudent::clear_speed()
    {
        _impl_.speed_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_speed() const
    {
        return _impl_.speed_;
    }
    inline int32_t MessageOfStudent::speed() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.speed)
        return _internal_speed();
    }
    inline void MessageOfStudent::_internal_set_speed(int32_t value)
    {
        _impl_.speed_ = value;
    }
    inline void MessageOfStudent::set_speed(int32_t value)
    {
        _internal_set_speed(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.speed)
    }

    // int32 determination = 4;
    inline void MessageOfStudent::clear_determination()
    {
        _impl_.determination_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_determination() const
    {
        return _impl_.determination_;
    }
    inline int32_t MessageOfStudent::determination() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.determination)
        return _internal_determination();
    }
    inline void MessageOfStudent::_internal_set_determination(int32_t value)
    {
        _impl_.determination_ = value;
    }
    inline void MessageOfStudent::set_determination(int32_t value)
    {
        _internal_set_determination(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.determination)
    }

    // int32 fail_num = 5;
    inline void MessageOfStudent::clear_fail_num()
    {
        _impl_.fail_num_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_fail_num() const
    {
        return _impl_.fail_num_;
    }
    inline int32_t MessageOfStudent::fail_num() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.fail_num)
        return _internal_fail_num();
    }
    inline void MessageOfStudent::_internal_set_fail_num(int32_t value)
    {
        _impl_.fail_num_ = value;
    }
    inline void MessageOfStudent::set_fail_num(int32_t value)
    {
        _internal_set_fail_num(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.fail_num)
    }

    // double time_until_skill_available = 6;
    inline void MessageOfStudent::clear_time_until_skill_available()
    {
        _impl_.time_until_skill_available_ = 0;
    }
    inline double MessageOfStudent::_internal_time_until_skill_available() const
    {
        return _impl_.time_until_skill_available_;
    }
    inline double MessageOfStudent::time_until_skill_available() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.time_until_skill_available)
        return _internal_time_until_skill_available();
    }
    inline void MessageOfStudent::_internal_set_time_until_skill_available(double value)
    {
        _impl_.time_until_skill_available_ = value;
    }
    inline void MessageOfStudent::set_time_until_skill_available(double value)
    {
        _internal_set_time_until_skill_available(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.time_until_skill_available)
    }

    // .protobuf.PlaceType place = 7;
    inline void MessageOfStudent::clear_place()
    {
        _impl_.place_ = 0;
    }
    inline ::protobuf::PlaceType MessageOfStudent::_internal_place() const
    {
        return static_cast<::protobuf::PlaceType>(_impl_.place_);
    }
    inline ::protobuf::PlaceType MessageOfStudent::place() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.place)
        return _internal_place();
    }
    inline void MessageOfStudent::_internal_set_place(::protobuf::PlaceType value)
    {
        _impl_.place_ = value;
    }
    inline void MessageOfStudent::set_place(::protobuf::PlaceType value)
    {
        _internal_set_place(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.place)
    }

    // .protobuf.PropType prop = 8;
    inline void MessageOfStudent::clear_prop()
    {
        _impl_.prop_ = 0;
    }
    inline ::protobuf::PropType MessageOfStudent::_internal_prop() const
    {
        return static_cast<::protobuf::PropType>(_impl_.prop_);
    }
    inline ::protobuf::PropType MessageOfStudent::prop() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.prop)
        return _internal_prop();
    }
    inline void MessageOfStudent::_internal_set_prop(::protobuf::PropType value)
    {
        _impl_.prop_ = value;
    }
    inline void MessageOfStudent::set_prop(::protobuf::PropType value)
    {
        _internal_set_prop(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.prop)
    }

    // .protobuf.StudentType student_type = 9;
    inline void MessageOfStudent::clear_student_type()
    {
        _impl_.student_type_ = 0;
    }
    inline ::protobuf::StudentType MessageOfStudent::_internal_student_type() const
    {
        return static_cast<::protobuf::StudentType>(_impl_.student_type_);
    }
    inline ::protobuf::StudentType MessageOfStudent::student_type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.student_type)
        return _internal_student_type();
    }
    inline void MessageOfStudent::_internal_set_student_type(::protobuf::StudentType value)
    {
        _impl_.student_type_ = value;
    }
    inline void MessageOfStudent::set_student_type(::protobuf::StudentType value)
    {
        _internal_set_student_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.student_type)
    }

    // int64 guid = 10;
    inline void MessageOfStudent::clear_guid()
    {
        _impl_.guid_ = int64_t{0};
    }
    inline int64_t MessageOfStudent::_internal_guid() const
    {
        return _impl_.guid_;
    }
    inline int64_t MessageOfStudent::guid() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.guid)
        return _internal_guid();
    }
    inline void MessageOfStudent::_internal_set_guid(int64_t value)
    {
        _impl_.guid_ = value;
    }
    inline void MessageOfStudent::set_guid(int64_t value)
    {
        _internal_set_guid(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.guid)
    }

    // .protobuf.StudentState state = 11;
    inline void MessageOfStudent::clear_state()
    {
        _impl_.state_ = 0;
    }
    inline ::protobuf::StudentState MessageOfStudent::_internal_state() const
    {
        return static_cast<::protobuf::StudentState>(_impl_.state_);
    }
    inline ::protobuf::StudentState MessageOfStudent::state() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.state)
        return _internal_state();
    }
    inline void MessageOfStudent::_internal_set_state(::protobuf::StudentState value)
    {
        _impl_.state_ = value;
    }
    inline void MessageOfStudent::set_state(::protobuf::StudentState value)
    {
        _internal_set_state(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.state)
    }

    // double fail_time = 12;
    inline void MessageOfStudent::clear_fail_time()
    {
        _impl_.fail_time_ = 0;
    }
    inline double MessageOfStudent::_internal_fail_time() const
    {
        return _impl_.fail_time_;
    }
    inline double MessageOfStudent::fail_time() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.fail_time)
        return _internal_fail_time();
    }
    inline void MessageOfStudent::_internal_set_fail_time(double value)
    {
        _impl_.fail_time_ = value;
    }
    inline void MessageOfStudent::set_fail_time(double value)
    {
        _internal_set_fail_time(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.fail_time)
    }

    // double emo_time = 14;
    inline void MessageOfStudent::clear_emo_time()
    {
        _impl_.emo_time_ = 0;
    }
    inline double MessageOfStudent::_internal_emo_time() const
    {
        return _impl_.emo_time_;
    }
    inline double MessageOfStudent::emo_time() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.emo_time)
        return _internal_emo_time();
    }
    inline void MessageOfStudent::_internal_set_emo_time(double value)
    {
        _impl_.emo_time_ = value;
    }
    inline void MessageOfStudent::set_emo_time(double value)
    {
        _internal_set_emo_time(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.emo_time)
    }

    // int64 player_id = 15;
    inline void MessageOfStudent::clear_player_id()
    {
        _impl_.player_id_ = int64_t{0};
    }
    inline int64_t MessageOfStudent::_internal_player_id() const
    {
        return _impl_.player_id_;
    }
    inline int64_t MessageOfStudent::player_id() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.player_id)
        return _internal_player_id();
    }
    inline void MessageOfStudent::_internal_set_player_id(int64_t value)
    {
        _impl_.player_id_ = value;
    }
    inline void MessageOfStudent::set_player_id(int64_t value)
    {
        _internal_set_player_id(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.player_id)
    }

    // int32 view_range = 16;
    inline void MessageOfStudent::clear_view_range()
    {
        _impl_.view_range_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_view_range() const
    {
        return _impl_.view_range_;
    }
    inline int32_t MessageOfStudent::view_range() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.view_range)
        return _internal_view_range();
    }
    inline void MessageOfStudent::_internal_set_view_range(int32_t value)
    {
        _impl_.view_range_ = value;
    }
    inline void MessageOfStudent::set_view_range(int32_t value)
    {
        _internal_set_view_range(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.view_range)
    }

    // int32 radius = 17;
    inline void MessageOfStudent::clear_radius()
    {
        _impl_.radius_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_radius() const
    {
        return _impl_.radius_;
    }
    inline int32_t MessageOfStudent::radius() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.radius)
        return _internal_radius();
    }
    inline void MessageOfStudent::_internal_set_radius(int32_t value)
    {
        _impl_.radius_ = value;
    }
    inline void MessageOfStudent::set_radius(int32_t value)
    {
        _internal_set_radius(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.radius)
    }

    // int32 damage = 18;
    inline void MessageOfStudent::clear_damage()
    {
        _impl_.damage_ = 0;
    }
    inline int32_t MessageOfStudent::_internal_damage() const
    {
        return _impl_.damage_;
    }
    inline int32_t MessageOfStudent::damage() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.damage)
        return _internal_damage();
    }
    inline void MessageOfStudent::_internal_set_damage(int32_t value)
    {
        _impl_.damage_ = value;
    }
    inline void MessageOfStudent::set_damage(int32_t value)
    {
        _internal_set_damage(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.damage)
    }

    // repeated .protobuf.StudentBuffType buff = 19;
    inline int MessageOfStudent::_internal_buff_size() const
    {
        return _impl_.buff_.size();
    }
    inline int MessageOfStudent::buff_size() const
    {
        return _internal_buff_size();
    }
    inline void MessageOfStudent::clear_buff()
    {
        _impl_.buff_.Clear();
    }
    inline ::protobuf::StudentBuffType MessageOfStudent::_internal_buff(int index) const
    {
        return static_cast<::protobuf::StudentBuffType>(_impl_.buff_.Get(index));
    }
    inline ::protobuf::StudentBuffType MessageOfStudent::buff(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfStudent.buff)
        return _internal_buff(index);
    }
    inline void MessageOfStudent::set_buff(int index, ::protobuf::StudentBuffType value)
    {
        _impl_.buff_.Set(index, value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfStudent.buff)
    }
    inline void MessageOfStudent::_internal_add_buff(::protobuf::StudentBuffType value)
    {
        _impl_.buff_.Add(value);
    }
    inline void MessageOfStudent::add_buff(::protobuf::StudentBuffType value)
    {
        _internal_add_buff(value);
        // @@protoc_insertion_point(field_add:protobuf.MessageOfStudent.buff)
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
        MessageOfStudent::buff() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageOfStudent.buff)
        return _impl_.buff_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfStudent::_internal_mutable_buff()
    {
        return &_impl_.buff_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfStudent::mutable_buff()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfStudent.buff)
        return _internal_mutable_buff();
    }

    // -------------------------------------------------------------------

    // MessageOfTricker

    // int32 x = 1;
    inline void MessageOfTricker::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfTricker::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfTricker::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.x)
        return _internal_x();
    }
    inline void MessageOfTricker::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfTricker::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.x)
    }

    // int32 y = 2;
    inline void MessageOfTricker::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfTricker::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfTricker::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.y)
        return _internal_y();
    }
    inline void MessageOfTricker::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfTricker::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.y)
    }

    // int32 speed = 3;
    inline void MessageOfTricker::clear_speed()
    {
        _impl_.speed_ = 0;
    }
    inline int32_t MessageOfTricker::_internal_speed() const
    {
        return _impl_.speed_;
    }
    inline int32_t MessageOfTricker::speed() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.speed)
        return _internal_speed();
    }
    inline void MessageOfTricker::_internal_set_speed(int32_t value)
    {
        _impl_.speed_ = value;
    }
    inline void MessageOfTricker::set_speed(int32_t value)
    {
        _internal_set_speed(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.speed)
    }

    // int32 damage = 4;
    inline void MessageOfTricker::clear_damage()
    {
        _impl_.damage_ = 0;
    }
    inline int32_t MessageOfTricker::_internal_damage() const
    {
        return _impl_.damage_;
    }
    inline int32_t MessageOfTricker::damage() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.damage)
        return _internal_damage();
    }
    inline void MessageOfTricker::_internal_set_damage(int32_t value)
    {
        _impl_.damage_ = value;
    }
    inline void MessageOfTricker::set_damage(int32_t value)
    {
        _internal_set_damage(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.damage)
    }

    // double time_until_skill_available = 5;
    inline void MessageOfTricker::clear_time_until_skill_available()
    {
        _impl_.time_until_skill_available_ = 0;
    }
    inline double MessageOfTricker::_internal_time_until_skill_available() const
    {
        return _impl_.time_until_skill_available_;
    }
    inline double MessageOfTricker::time_until_skill_available() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.time_until_skill_available)
        return _internal_time_until_skill_available();
    }
    inline void MessageOfTricker::_internal_set_time_until_skill_available(double value)
    {
        _impl_.time_until_skill_available_ = value;
    }
    inline void MessageOfTricker::set_time_until_skill_available(double value)
    {
        _internal_set_time_until_skill_available(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.time_until_skill_available)
    }

    // .protobuf.PlaceType place = 6;
    inline void MessageOfTricker::clear_place()
    {
        _impl_.place_ = 0;
    }
    inline ::protobuf::PlaceType MessageOfTricker::_internal_place() const
    {
        return static_cast<::protobuf::PlaceType>(_impl_.place_);
    }
    inline ::protobuf::PlaceType MessageOfTricker::place() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.place)
        return _internal_place();
    }
    inline void MessageOfTricker::_internal_set_place(::protobuf::PlaceType value)
    {
        _impl_.place_ = value;
    }
    inline void MessageOfTricker::set_place(::protobuf::PlaceType value)
    {
        _internal_set_place(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.place)
    }

    // .protobuf.PropType prop = 7;
    inline void MessageOfTricker::clear_prop()
    {
        _impl_.prop_ = 0;
    }
    inline ::protobuf::PropType MessageOfTricker::_internal_prop() const
    {
        return static_cast<::protobuf::PropType>(_impl_.prop_);
    }
    inline ::protobuf::PropType MessageOfTricker::prop() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.prop)
        return _internal_prop();
    }
    inline void MessageOfTricker::_internal_set_prop(::protobuf::PropType value)
    {
        _impl_.prop_ = value;
    }
    inline void MessageOfTricker::set_prop(::protobuf::PropType value)
    {
        _internal_set_prop(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.prop)
    }

    // .protobuf.TrickerType tricker_type = 8;
    inline void MessageOfTricker::clear_tricker_type()
    {
        _impl_.tricker_type_ = 0;
    }
    inline ::protobuf::TrickerType MessageOfTricker::_internal_tricker_type() const
    {
        return static_cast<::protobuf::TrickerType>(_impl_.tricker_type_);
    }
    inline ::protobuf::TrickerType MessageOfTricker::tricker_type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.tricker_type)
        return _internal_tricker_type();
    }
    inline void MessageOfTricker::_internal_set_tricker_type(::protobuf::TrickerType value)
    {
        _impl_.tricker_type_ = value;
    }
    inline void MessageOfTricker::set_tricker_type(::protobuf::TrickerType value)
    {
        _internal_set_tricker_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.tricker_type)
    }

    // int64 guid = 9;
    inline void MessageOfTricker::clear_guid()
    {
        _impl_.guid_ = int64_t{0};
    }
    inline int64_t MessageOfTricker::_internal_guid() const
    {
        return _impl_.guid_;
    }
    inline int64_t MessageOfTricker::guid() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.guid)
        return _internal_guid();
    }
    inline void MessageOfTricker::_internal_set_guid(int64_t value)
    {
        _impl_.guid_ = value;
    }
    inline void MessageOfTricker::set_guid(int64_t value)
    {
        _internal_set_guid(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.guid)
    }

    // bool movable = 10;
    inline void MessageOfTricker::clear_movable()
    {
        _impl_.movable_ = false;
    }
    inline bool MessageOfTricker::_internal_movable() const
    {
        return _impl_.movable_;
    }
    inline bool MessageOfTricker::movable() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.movable)
        return _internal_movable();
    }
    inline void MessageOfTricker::_internal_set_movable(bool value)
    {
        _impl_.movable_ = value;
    }
    inline void MessageOfTricker::set_movable(bool value)
    {
        _internal_set_movable(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.movable)
    }

    // int64 player_id = 11;
    inline void MessageOfTricker::clear_player_id()
    {
        _impl_.player_id_ = int64_t{0};
    }
    inline int64_t MessageOfTricker::_internal_player_id() const
    {
        return _impl_.player_id_;
    }
    inline int64_t MessageOfTricker::player_id() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.player_id)
        return _internal_player_id();
    }
    inline void MessageOfTricker::_internal_set_player_id(int64_t value)
    {
        _impl_.player_id_ = value;
    }
    inline void MessageOfTricker::set_player_id(int64_t value)
    {
        _internal_set_player_id(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.player_id)
    }

    // int32 view_range = 12;
    inline void MessageOfTricker::clear_view_range()
    {
        _impl_.view_range_ = 0;
    }
    inline int32_t MessageOfTricker::_internal_view_range() const
    {
        return _impl_.view_range_;
    }
    inline int32_t MessageOfTricker::view_range() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.view_range)
        return _internal_view_range();
    }
    inline void MessageOfTricker::_internal_set_view_range(int32_t value)
    {
        _impl_.view_range_ = value;
    }
    inline void MessageOfTricker::set_view_range(int32_t value)
    {
        _internal_set_view_range(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.view_range)
    }

    // int32 radius = 13;
    inline void MessageOfTricker::clear_radius()
    {
        _impl_.radius_ = 0;
    }
    inline int32_t MessageOfTricker::_internal_radius() const
    {
        return _impl_.radius_;
    }
    inline int32_t MessageOfTricker::radius() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.radius)
        return _internal_radius();
    }
    inline void MessageOfTricker::_internal_set_radius(int32_t value)
    {
        _impl_.radius_ = value;
    }
    inline void MessageOfTricker::set_radius(int32_t value)
    {
        _internal_set_radius(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.radius)
    }

    // repeated .protobuf.TrickerBuffType buff = 14;
    inline int MessageOfTricker::_internal_buff_size() const
    {
        return _impl_.buff_.size();
    }
    inline int MessageOfTricker::buff_size() const
    {
        return _internal_buff_size();
    }
    inline void MessageOfTricker::clear_buff()
    {
        _impl_.buff_.Clear();
    }
    inline ::protobuf::TrickerBuffType MessageOfTricker::_internal_buff(int index) const
    {
        return static_cast<::protobuf::TrickerBuffType>(_impl_.buff_.Get(index));
    }
    inline ::protobuf::TrickerBuffType MessageOfTricker::buff(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfTricker.buff)
        return _internal_buff(index);
    }
    inline void MessageOfTricker::set_buff(int index, ::protobuf::TrickerBuffType value)
    {
        _impl_.buff_.Set(index, value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfTricker.buff)
    }
    inline void MessageOfTricker::_internal_add_buff(::protobuf::TrickerBuffType value)
    {
        _impl_.buff_.Add(value);
    }
    inline void MessageOfTricker::add_buff(::protobuf::TrickerBuffType value)
    {
        _internal_add_buff(value);
        // @@protoc_insertion_point(field_add:protobuf.MessageOfTricker.buff)
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
        MessageOfTricker::buff() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageOfTricker.buff)
        return _impl_.buff_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfTricker::_internal_mutable_buff()
    {
        return &_impl_.buff_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfTricker::mutable_buff()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfTricker.buff)
        return _internal_mutable_buff();
    }

    // -------------------------------------------------------------------

    // MessageOfBullet

    // .protobuf.BulletType type = 1;
    inline void MessageOfBullet::clear_type()
    {
        _impl_.type_ = 0;
    }
    inline ::protobuf::BulletType MessageOfBullet::_internal_type() const
    {
        return static_cast<::protobuf::BulletType>(_impl_.type_);
    }
    inline ::protobuf::BulletType MessageOfBullet::type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.type)
        return _internal_type();
    }
    inline void MessageOfBullet::_internal_set_type(::protobuf::BulletType value)
    {
        _impl_.type_ = value;
    }
    inline void MessageOfBullet::set_type(::protobuf::BulletType value)
    {
        _internal_set_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.type)
    }

    // int32 x = 2;
    inline void MessageOfBullet::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfBullet::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfBullet::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.x)
        return _internal_x();
    }
    inline void MessageOfBullet::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfBullet::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.x)
    }

    // int32 y = 3;
    inline void MessageOfBullet::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfBullet::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfBullet::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.y)
        return _internal_y();
    }
    inline void MessageOfBullet::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfBullet::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.y)
    }

    // double facing_direction = 4;
    inline void MessageOfBullet::clear_facing_direction()
    {
        _impl_.facing_direction_ = 0;
    }
    inline double MessageOfBullet::_internal_facing_direction() const
    {
        return _impl_.facing_direction_;
    }
    inline double MessageOfBullet::facing_direction() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.facing_direction)
        return _internal_facing_direction();
    }
    inline void MessageOfBullet::_internal_set_facing_direction(double value)
    {
        _impl_.facing_direction_ = value;
    }
    inline void MessageOfBullet::set_facing_direction(double value)
    {
        _internal_set_facing_direction(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.facing_direction)
    }

    // int64 guid = 5;
    inline void MessageOfBullet::clear_guid()
    {
        _impl_.guid_ = int64_t{0};
    }
    inline int64_t MessageOfBullet::_internal_guid() const
    {
        return _impl_.guid_;
    }
    inline int64_t MessageOfBullet::guid() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.guid)
        return _internal_guid();
    }
    inline void MessageOfBullet::_internal_set_guid(int64_t value)
    {
        _impl_.guid_ = value;
    }
    inline void MessageOfBullet::set_guid(int64_t value)
    {
        _internal_set_guid(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.guid)
    }

    // int64 parent_team_id = 6;
    inline void MessageOfBullet::clear_parent_team_id()
    {
        _impl_.parent_team_id_ = int64_t{0};
    }
    inline int64_t MessageOfBullet::_internal_parent_team_id() const
    {
        return _impl_.parent_team_id_;
    }
    inline int64_t MessageOfBullet::parent_team_id() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.parent_team_id)
        return _internal_parent_team_id();
    }
    inline void MessageOfBullet::_internal_set_parent_team_id(int64_t value)
    {
        _impl_.parent_team_id_ = value;
    }
    inline void MessageOfBullet::set_parent_team_id(int64_t value)
    {
        _internal_set_parent_team_id(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.parent_team_id)
    }

    // .protobuf.PlaceType place = 7;
    inline void MessageOfBullet::clear_place()
    {
        _impl_.place_ = 0;
    }
    inline ::protobuf::PlaceType MessageOfBullet::_internal_place() const
    {
        return static_cast<::protobuf::PlaceType>(_impl_.place_);
    }
    inline ::protobuf::PlaceType MessageOfBullet::place() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.place)
        return _internal_place();
    }
    inline void MessageOfBullet::_internal_set_place(::protobuf::PlaceType value)
    {
        _impl_.place_ = value;
    }
    inline void MessageOfBullet::set_place(::protobuf::PlaceType value)
    {
        _internal_set_place(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.place)
    }

    // double bomb_range = 8;
    inline void MessageOfBullet::clear_bomb_range()
    {
        _impl_.bomb_range_ = 0;
    }
    inline double MessageOfBullet::_internal_bomb_range() const
    {
        return _impl_.bomb_range_;
    }
    inline double MessageOfBullet::bomb_range() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBullet.bomb_range)
        return _internal_bomb_range();
    }
    inline void MessageOfBullet::_internal_set_bomb_range(double value)
    {
        _impl_.bomb_range_ = value;
    }
    inline void MessageOfBullet::set_bomb_range(double value)
    {
        _internal_set_bomb_range(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBullet.bomb_range)
    }

    // -------------------------------------------------------------------

    // MessageOfBombedBullet

    // .protobuf.BulletType type = 1;
    inline void MessageOfBombedBullet::clear_type()
    {
        _impl_.type_ = 0;
    }
    inline ::protobuf::BulletType MessageOfBombedBullet::_internal_type() const
    {
        return static_cast<::protobuf::BulletType>(_impl_.type_);
    }
    inline ::protobuf::BulletType MessageOfBombedBullet::type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBombedBullet.type)
        return _internal_type();
    }
    inline void MessageOfBombedBullet::_internal_set_type(::protobuf::BulletType value)
    {
        _impl_.type_ = value;
    }
    inline void MessageOfBombedBullet::set_type(::protobuf::BulletType value)
    {
        _internal_set_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBombedBullet.type)
    }

    // int32 x = 2;
    inline void MessageOfBombedBullet::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfBombedBullet::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfBombedBullet::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBombedBullet.x)
        return _internal_x();
    }
    inline void MessageOfBombedBullet::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfBombedBullet::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBombedBullet.x)
    }

    // int32 y = 3;
    inline void MessageOfBombedBullet::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfBombedBullet::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfBombedBullet::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBombedBullet.y)
        return _internal_y();
    }
    inline void MessageOfBombedBullet::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfBombedBullet::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBombedBullet.y)
    }

    // double facing_direction = 4;
    inline void MessageOfBombedBullet::clear_facing_direction()
    {
        _impl_.facing_direction_ = 0;
    }
    inline double MessageOfBombedBullet::_internal_facing_direction() const
    {
        return _impl_.facing_direction_;
    }
    inline double MessageOfBombedBullet::facing_direction() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBombedBullet.facing_direction)
        return _internal_facing_direction();
    }
    inline void MessageOfBombedBullet::_internal_set_facing_direction(double value)
    {
        _impl_.facing_direction_ = value;
    }
    inline void MessageOfBombedBullet::set_facing_direction(double value)
    {
        _internal_set_facing_direction(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBombedBullet.facing_direction)
    }

    // int64 mapping_id = 5;
    inline void MessageOfBombedBullet::clear_mapping_id()
    {
        _impl_.mapping_id_ = int64_t{0};
    }
    inline int64_t MessageOfBombedBullet::_internal_mapping_id() const
    {
        return _impl_.mapping_id_;
    }
    inline int64_t MessageOfBombedBullet::mapping_id() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBombedBullet.mapping_id)
        return _internal_mapping_id();
    }
    inline void MessageOfBombedBullet::_internal_set_mapping_id(int64_t value)
    {
        _impl_.mapping_id_ = value;
    }
    inline void MessageOfBombedBullet::set_mapping_id(int64_t value)
    {
        _internal_set_mapping_id(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBombedBullet.mapping_id)
    }

    // double bomb_range = 6;
    inline void MessageOfBombedBullet::clear_bomb_range()
    {
        _impl_.bomb_range_ = 0;
    }
    inline double MessageOfBombedBullet::_internal_bomb_range() const
    {
        return _impl_.bomb_range_;
    }
    inline double MessageOfBombedBullet::bomb_range() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfBombedBullet.bomb_range)
        return _internal_bomb_range();
    }
    inline void MessageOfBombedBullet::_internal_set_bomb_range(double value)
    {
        _impl_.bomb_range_ = value;
    }
    inline void MessageOfBombedBullet::set_bomb_range(double value)
    {
        _internal_set_bomb_range(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfBombedBullet.bomb_range)
    }

    // -------------------------------------------------------------------

    // MessageOfProp

    // .protobuf.PropType type = 1;
    inline void MessageOfProp::clear_type()
    {
        _impl_.type_ = 0;
    }
    inline ::protobuf::PropType MessageOfProp::_internal_type() const
    {
        return static_cast<::protobuf::PropType>(_impl_.type_);
    }
    inline ::protobuf::PropType MessageOfProp::type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfProp.type)
        return _internal_type();
    }
    inline void MessageOfProp::_internal_set_type(::protobuf::PropType value)
    {
        _impl_.type_ = value;
    }
    inline void MessageOfProp::set_type(::protobuf::PropType value)
    {
        _internal_set_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfProp.type)
    }

    // int32 x = 2;
    inline void MessageOfProp::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfProp::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfProp::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfProp.x)
        return _internal_x();
    }
    inline void MessageOfProp::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfProp::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfProp.x)
    }

    // int32 y = 3;
    inline void MessageOfProp::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfProp::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfProp::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfProp.y)
        return _internal_y();
    }
    inline void MessageOfProp::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfProp::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfProp.y)
    }

    // double facing_direction = 4;
    inline void MessageOfProp::clear_facing_direction()
    {
        _impl_.facing_direction_ = 0;
    }
    inline double MessageOfProp::_internal_facing_direction() const
    {
        return _impl_.facing_direction_;
    }
    inline double MessageOfProp::facing_direction() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfProp.facing_direction)
        return _internal_facing_direction();
    }
    inline void MessageOfProp::_internal_set_facing_direction(double value)
    {
        _impl_.facing_direction_ = value;
    }
    inline void MessageOfProp::set_facing_direction(double value)
    {
        _internal_set_facing_direction(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfProp.facing_direction)
    }

    // int64 guid = 5;
    inline void MessageOfProp::clear_guid()
    {
        _impl_.guid_ = int64_t{0};
    }
    inline int64_t MessageOfProp::_internal_guid() const
    {
        return _impl_.guid_;
    }
    inline int64_t MessageOfProp::guid() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfProp.guid)
        return _internal_guid();
    }
    inline void MessageOfProp::_internal_set_guid(int64_t value)
    {
        _impl_.guid_ = value;
    }
    inline void MessageOfProp::set_guid(int64_t value)
    {
        _internal_set_guid(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfProp.guid)
    }

    // .protobuf.PlaceType place = 6;
    inline void MessageOfProp::clear_place()
    {
        _impl_.place_ = 0;
    }
    inline ::protobuf::PlaceType MessageOfProp::_internal_place() const
    {
        return static_cast<::protobuf::PlaceType>(_impl_.place_);
    }
    inline ::protobuf::PlaceType MessageOfProp::place() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfProp.place)
        return _internal_place();
    }
    inline void MessageOfProp::_internal_set_place(::protobuf::PlaceType value)
    {
        _impl_.place_ = value;
    }
    inline void MessageOfProp::set_place(::protobuf::PlaceType value)
    {
        _internal_set_place(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfProp.place)
    }

    // int32 size = 7;
    inline void MessageOfProp::clear_size()
    {
        _impl_.size_ = 0;
    }
    inline int32_t MessageOfProp::_internal_size() const
    {
        return _impl_.size_;
    }
    inline int32_t MessageOfProp::size() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfProp.size)
        return _internal_size();
    }
    inline void MessageOfProp::_internal_set_size(int32_t value)
    {
        _impl_.size_ = value;
    }
    inline void MessageOfProp::set_size(int32_t value)
    {
        _internal_set_size(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfProp.size)
    }

    // bool is_moving = 8;
    inline void MessageOfProp::clear_is_moving()
    {
        _impl_.is_moving_ = false;
    }
    inline bool MessageOfProp::_internal_is_moving() const
    {
        return _impl_.is_moving_;
    }
    inline bool MessageOfProp::is_moving() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfProp.is_moving)
        return _internal_is_moving();
    }
    inline void MessageOfProp::_internal_set_is_moving(bool value)
    {
        _impl_.is_moving_ = value;
    }
    inline void MessageOfProp::set_is_moving(bool value)
    {
        _internal_set_is_moving(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfProp.is_moving)
    }

    // -------------------------------------------------------------------

    // MessageOfPickedProp

    // .protobuf.PropType type = 1;
    inline void MessageOfPickedProp::clear_type()
    {
        _impl_.type_ = 0;
    }
    inline ::protobuf::PropType MessageOfPickedProp::_internal_type() const
    {
        return static_cast<::protobuf::PropType>(_impl_.type_);
    }
    inline ::protobuf::PropType MessageOfPickedProp::type() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfPickedProp.type)
        return _internal_type();
    }
    inline void MessageOfPickedProp::_internal_set_type(::protobuf::PropType value)
    {
        _impl_.type_ = value;
    }
    inline void MessageOfPickedProp::set_type(::protobuf::PropType value)
    {
        _internal_set_type(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfPickedProp.type)
    }

    // int32 x = 2;
    inline void MessageOfPickedProp::clear_x()
    {
        _impl_.x_ = 0;
    }
    inline int32_t MessageOfPickedProp::_internal_x() const
    {
        return _impl_.x_;
    }
    inline int32_t MessageOfPickedProp::x() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfPickedProp.x)
        return _internal_x();
    }
    inline void MessageOfPickedProp::_internal_set_x(int32_t value)
    {
        _impl_.x_ = value;
    }
    inline void MessageOfPickedProp::set_x(int32_t value)
    {
        _internal_set_x(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfPickedProp.x)
    }

    // int32 y = 3;
    inline void MessageOfPickedProp::clear_y()
    {
        _impl_.y_ = 0;
    }
    inline int32_t MessageOfPickedProp::_internal_y() const
    {
        return _impl_.y_;
    }
    inline int32_t MessageOfPickedProp::y() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfPickedProp.y)
        return _internal_y();
    }
    inline void MessageOfPickedProp::_internal_set_y(int32_t value)
    {
        _impl_.y_ = value;
    }
    inline void MessageOfPickedProp::set_y(int32_t value)
    {
        _internal_set_y(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfPickedProp.y)
    }

    // double facing_direction = 4;
    inline void MessageOfPickedProp::clear_facing_direction()
    {
        _impl_.facing_direction_ = 0;
    }
    inline double MessageOfPickedProp::_internal_facing_direction() const
    {
        return _impl_.facing_direction_;
    }
    inline double MessageOfPickedProp::facing_direction() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfPickedProp.facing_direction)
        return _internal_facing_direction();
    }
    inline void MessageOfPickedProp::_internal_set_facing_direction(double value)
    {
        _impl_.facing_direction_ = value;
    }
    inline void MessageOfPickedProp::set_facing_direction(double value)
    {
        _internal_set_facing_direction(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfPickedProp.facing_direction)
    }

    // int64 mapping_id = 5;
    inline void MessageOfPickedProp::clear_mapping_id()
    {
        _impl_.mapping_id_ = int64_t{0};
    }
    inline int64_t MessageOfPickedProp::_internal_mapping_id() const
    {
        return _impl_.mapping_id_;
    }
    inline int64_t MessageOfPickedProp::mapping_id() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfPickedProp.mapping_id)
        return _internal_mapping_id();
    }
    inline void MessageOfPickedProp::_internal_set_mapping_id(int64_t value)
    {
        _impl_.mapping_id_ = value;
    }
    inline void MessageOfPickedProp::set_mapping_id(int64_t value)
    {
        _internal_set_mapping_id(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfPickedProp.mapping_id)
    }

    // -------------------------------------------------------------------

    // MessageOfMap_Row

    // repeated .protobuf.PlaceType col = 1;
    inline int MessageOfMap_Row::_internal_col_size() const
    {
        return _impl_.col_.size();
    }
    inline int MessageOfMap_Row::col_size() const
    {
        return _internal_col_size();
    }
    inline void MessageOfMap_Row::clear_col()
    {
        _impl_.col_.Clear();
    }
    inline ::protobuf::PlaceType MessageOfMap_Row::_internal_col(int index) const
    {
        return static_cast<::protobuf::PlaceType>(_impl_.col_.Get(index));
    }
    inline ::protobuf::PlaceType MessageOfMap_Row::col(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfMap.Row.col)
        return _internal_col(index);
    }
    inline void MessageOfMap_Row::set_col(int index, ::protobuf::PlaceType value)
    {
        _impl_.col_.Set(index, value);
        // @@protoc_insertion_point(field_set:protobuf.MessageOfMap.Row.col)
    }
    inline void MessageOfMap_Row::_internal_add_col(::protobuf::PlaceType value)
    {
        _impl_.col_.Add(value);
    }
    inline void MessageOfMap_Row::add_col(::protobuf::PlaceType value)
    {
        _internal_add_col(value);
        // @@protoc_insertion_point(field_add:protobuf.MessageOfMap.Row.col)
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
        MessageOfMap_Row::col() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageOfMap.Row.col)
        return _impl_.col_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfMap_Row::_internal_mutable_col()
    {
        return &_impl_.col_;
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
        MessageOfMap_Row::mutable_col()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfMap.Row.col)
        return _internal_mutable_col();
    }

    // -------------------------------------------------------------------

    // MessageOfMap

    // repeated .protobuf.MessageOfMap.Row row = 2;
    inline int MessageOfMap::_internal_row_size() const
    {
        return _impl_.row_.size();
    }
    inline int MessageOfMap::row_size() const
    {
        return _internal_row_size();
    }
    inline void MessageOfMap::clear_row()
    {
        _impl_.row_.Clear();
    }
    inline ::protobuf::MessageOfMap_Row* MessageOfMap::mutable_row(int index)
    {
        // @@protoc_insertion_point(field_mutable:protobuf.MessageOfMap.row)
        return _impl_.row_.Mutable(index);
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row>*
        MessageOfMap::mutable_row()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageOfMap.row)
        return &_impl_.row_;
    }
    inline const ::protobuf::MessageOfMap_Row& MessageOfMap::_internal_row(int index) const
    {
        return _impl_.row_.Get(index);
    }
    inline const ::protobuf::MessageOfMap_Row& MessageOfMap::row(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageOfMap.row)
        return _internal_row(index);
    }
    inline ::protobuf::MessageOfMap_Row* MessageOfMap::_internal_add_row()
    {
        return _impl_.row_.Add();
    }
    inline ::protobuf::MessageOfMap_Row* MessageOfMap::add_row()
    {
        ::protobuf::MessageOfMap_Row* _add = _internal_add_row();
        // @@protoc_insertion_point(field_add:protobuf.MessageOfMap.row)
        return _add;
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfMap_Row>&
        MessageOfMap::row() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageOfMap.row)
        return _impl_.row_;
    }

    // -------------------------------------------------------------------

    // MessageToClient

    // repeated .protobuf.MessageOfStudent student_message = 1;
    inline int MessageToClient::_internal_student_message_size() const
    {
        return _impl_.student_message_.size();
    }
    inline int MessageToClient::student_message_size() const
    {
        return _internal_student_message_size();
    }
    inline void MessageToClient::clear_student_message()
    {
        _impl_.student_message_.Clear();
    }
    inline ::protobuf::MessageOfStudent* MessageToClient::mutable_student_message(int index)
    {
        // @@protoc_insertion_point(field_mutable:protobuf.MessageToClient.student_message)
        return _impl_.student_message_.Mutable(index);
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfStudent>*
        MessageToClient::mutable_student_message()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageToClient.student_message)
        return &_impl_.student_message_;
    }
    inline const ::protobuf::MessageOfStudent& MessageToClient::_internal_student_message(int index) const
    {
        return _impl_.student_message_.Get(index);
    }
    inline const ::protobuf::MessageOfStudent& MessageToClient::student_message(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageToClient.student_message)
        return _internal_student_message(index);
    }
    inline ::protobuf::MessageOfStudent* MessageToClient::_internal_add_student_message()
    {
        return _impl_.student_message_.Add();
    }
    inline ::protobuf::MessageOfStudent* MessageToClient::add_student_message()
    {
        ::protobuf::MessageOfStudent* _add = _internal_add_student_message();
        // @@protoc_insertion_point(field_add:protobuf.MessageToClient.student_message)
        return _add;
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfStudent>&
        MessageToClient::student_message() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageToClient.student_message)
        return _impl_.student_message_;
    }

    // repeated .protobuf.MessageOfTricker tricker_message = 2;
    inline int MessageToClient::_internal_tricker_message_size() const
    {
        return _impl_.tricker_message_.size();
    }
    inline int MessageToClient::tricker_message_size() const
    {
        return _internal_tricker_message_size();
    }
    inline void MessageToClient::clear_tricker_message()
    {
        _impl_.tricker_message_.Clear();
    }
    inline ::protobuf::MessageOfTricker* MessageToClient::mutable_tricker_message(int index)
    {
        // @@protoc_insertion_point(field_mutable:protobuf.MessageToClient.tricker_message)
        return _impl_.tricker_message_.Mutable(index);
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfTricker>*
        MessageToClient::mutable_tricker_message()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageToClient.tricker_message)
        return &_impl_.tricker_message_;
    }
    inline const ::protobuf::MessageOfTricker& MessageToClient::_internal_tricker_message(int index) const
    {
        return _impl_.tricker_message_.Get(index);
    }
    inline const ::protobuf::MessageOfTricker& MessageToClient::tricker_message(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageToClient.tricker_message)
        return _internal_tricker_message(index);
    }
    inline ::protobuf::MessageOfTricker* MessageToClient::_internal_add_tricker_message()
    {
        return _impl_.tricker_message_.Add();
    }
    inline ::protobuf::MessageOfTricker* MessageToClient::add_tricker_message()
    {
        ::protobuf::MessageOfTricker* _add = _internal_add_tricker_message();
        // @@protoc_insertion_point(field_add:protobuf.MessageToClient.tricker_message)
        return _add;
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfTricker>&
        MessageToClient::tricker_message() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageToClient.tricker_message)
        return _impl_.tricker_message_;
    }

    // repeated .protobuf.MessageOfProp prop_message = 3;
    inline int MessageToClient::_internal_prop_message_size() const
    {
        return _impl_.prop_message_.size();
    }
    inline int MessageToClient::prop_message_size() const
    {
        return _internal_prop_message_size();
    }
    inline void MessageToClient::clear_prop_message()
    {
        _impl_.prop_message_.Clear();
    }
    inline ::protobuf::MessageOfProp* MessageToClient::mutable_prop_message(int index)
    {
        // @@protoc_insertion_point(field_mutable:protobuf.MessageToClient.prop_message)
        return _impl_.prop_message_.Mutable(index);
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfProp>*
        MessageToClient::mutable_prop_message()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageToClient.prop_message)
        return &_impl_.prop_message_;
    }
    inline const ::protobuf::MessageOfProp& MessageToClient::_internal_prop_message(int index) const
    {
        return _impl_.prop_message_.Get(index);
    }
    inline const ::protobuf::MessageOfProp& MessageToClient::prop_message(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageToClient.prop_message)
        return _internal_prop_message(index);
    }
    inline ::protobuf::MessageOfProp* MessageToClient::_internal_add_prop_message()
    {
        return _impl_.prop_message_.Add();
    }
    inline ::protobuf::MessageOfProp* MessageToClient::add_prop_message()
    {
        ::protobuf::MessageOfProp* _add = _internal_add_prop_message();
        // @@protoc_insertion_point(field_add:protobuf.MessageToClient.prop_message)
        return _add;
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfProp>&
        MessageToClient::prop_message() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageToClient.prop_message)
        return _impl_.prop_message_;
    }

    // repeated .protobuf.MessageOfBullet bullet_message = 4;
    inline int MessageToClient::_internal_bullet_message_size() const
    {
        return _impl_.bullet_message_.size();
    }
    inline int MessageToClient::bullet_message_size() const
    {
        return _internal_bullet_message_size();
    }
    inline void MessageToClient::clear_bullet_message()
    {
        _impl_.bullet_message_.Clear();
    }
    inline ::protobuf::MessageOfBullet* MessageToClient::mutable_bullet_message(int index)
    {
        // @@protoc_insertion_point(field_mutable:protobuf.MessageToClient.bullet_message)
        return _impl_.bullet_message_.Mutable(index);
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfBullet>*
        MessageToClient::mutable_bullet_message()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageToClient.bullet_message)
        return &_impl_.bullet_message_;
    }
    inline const ::protobuf::MessageOfBullet& MessageToClient::_internal_bullet_message(int index) const
    {
        return _impl_.bullet_message_.Get(index);
    }
    inline const ::protobuf::MessageOfBullet& MessageToClient::bullet_message(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageToClient.bullet_message)
        return _internal_bullet_message(index);
    }
    inline ::protobuf::MessageOfBullet* MessageToClient::_internal_add_bullet_message()
    {
        return _impl_.bullet_message_.Add();
    }
    inline ::protobuf::MessageOfBullet* MessageToClient::add_bullet_message()
    {
        ::protobuf::MessageOfBullet* _add = _internal_add_bullet_message();
        // @@protoc_insertion_point(field_add:protobuf.MessageToClient.bullet_message)
        return _add;
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfBullet>&
        MessageToClient::bullet_message() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageToClient.bullet_message)
        return _impl_.bullet_message_;
    }

    // repeated .protobuf.MessageOfBombedBullet bombed_bullet_message = 5;
    inline int MessageToClient::_internal_bombed_bullet_message_size() const
    {
        return _impl_.bombed_bullet_message_.size();
    }
    inline int MessageToClient::bombed_bullet_message_size() const
    {
        return _internal_bombed_bullet_message_size();
    }
    inline void MessageToClient::clear_bombed_bullet_message()
    {
        _impl_.bombed_bullet_message_.Clear();
    }
    inline ::protobuf::MessageOfBombedBullet* MessageToClient::mutable_bombed_bullet_message(int index)
    {
        // @@protoc_insertion_point(field_mutable:protobuf.MessageToClient.bombed_bullet_message)
        return _impl_.bombed_bullet_message_.Mutable(index);
    }
    inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfBombedBullet>*
        MessageToClient::mutable_bombed_bullet_message()
    {
        // @@protoc_insertion_point(field_mutable_list:protobuf.MessageToClient.bombed_bullet_message)
        return &_impl_.bombed_bullet_message_;
    }
    inline const ::protobuf::MessageOfBombedBullet& MessageToClient::_internal_bombed_bullet_message(int index) const
    {
        return _impl_.bombed_bullet_message_.Get(index);
    }
    inline const ::protobuf::MessageOfBombedBullet& MessageToClient::bombed_bullet_message(int index) const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageToClient.bombed_bullet_message)
        return _internal_bombed_bullet_message(index);
    }
    inline ::protobuf::MessageOfBombedBullet* MessageToClient::_internal_add_bombed_bullet_message()
    {
        return _impl_.bombed_bullet_message_.Add();
    }
    inline ::protobuf::MessageOfBombedBullet* MessageToClient::add_bombed_bullet_message()
    {
        ::protobuf::MessageOfBombedBullet* _add = _internal_add_bombed_bullet_message();
        // @@protoc_insertion_point(field_add:protobuf.MessageToClient.bombed_bullet_message)
        return _add;
    }
    inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<::protobuf::MessageOfBombedBullet>&
        MessageToClient::bombed_bullet_message() const
    {
        // @@protoc_insertion_point(field_list:protobuf.MessageToClient.bombed_bullet_message)
        return _impl_.bombed_bullet_message_;
    }

    // .protobuf.MessageOfMap map_message = 6;
    inline bool MessageToClient::_internal_has_map_message() const
    {
        return this != internal_default_instance() && _impl_.map_message_ != nullptr;
    }
    inline bool MessageToClient::has_map_message() const
    {
        return _internal_has_map_message();
    }
    inline void MessageToClient::clear_map_message()
    {
        if (GetArenaForAllocation() == nullptr && _impl_.map_message_ != nullptr)
        {
            delete _impl_.map_message_;
        }
        _impl_.map_message_ = nullptr;
    }
    inline const ::protobuf::MessageOfMap& MessageToClient::_internal_map_message() const
    {
        const ::protobuf::MessageOfMap* p = _impl_.map_message_;
        return p != nullptr ? *p : reinterpret_cast<const ::protobuf::MessageOfMap&>(::protobuf::_MessageOfMap_default_instance_);
    }
    inline const ::protobuf::MessageOfMap& MessageToClient::map_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageToClient.map_message)
        return _internal_map_message();
    }
    inline void MessageToClient::unsafe_arena_set_allocated_map_message(
        ::protobuf::MessageOfMap* map_message
    )
    {
        if (GetArenaForAllocation() == nullptr)
        {
            delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_impl_.map_message_);
        }
        _impl_.map_message_ = map_message;
        if (map_message)
        {
        }
        else
        {
        }
        // @@protoc_insertion_point(field_unsafe_arena_set_allocated:protobuf.MessageToClient.map_message)
    }
    inline ::protobuf::MessageOfMap* MessageToClient::release_map_message()
    {
        ::protobuf::MessageOfMap* temp = _impl_.map_message_;
        _impl_.map_message_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
        auto* old = reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(temp);
        temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
        if (GetArenaForAllocation() == nullptr)
        {
            delete old;
        }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
        if (GetArenaForAllocation() != nullptr)
        {
            temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
        }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
        return temp;
    }
    inline ::protobuf::MessageOfMap* MessageToClient::unsafe_arena_release_map_message()
    {
        // @@protoc_insertion_point(field_release:protobuf.MessageToClient.map_message)

        ::protobuf::MessageOfMap* temp = _impl_.map_message_;
        _impl_.map_message_ = nullptr;
        return temp;
    }
    inline ::protobuf::MessageOfMap* MessageToClient::_internal_mutable_map_message()
    {
        if (_impl_.map_message_ == nullptr)
        {
            auto* p = CreateMaybeMessage<::protobuf::MessageOfMap>(GetArenaForAllocation());
            _impl_.map_message_ = p;
        }
        return _impl_.map_message_;
    }
    inline ::protobuf::MessageOfMap* MessageToClient::mutable_map_message()
    {
        ::protobuf::MessageOfMap* _msg = _internal_mutable_map_message();
        // @@protoc_insertion_point(field_mutable:protobuf.MessageToClient.map_message)
        return _msg;
    }
    inline void MessageToClient::set_allocated_map_message(::protobuf::MessageOfMap* map_message)
    {
        ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
        if (message_arena == nullptr)
        {
            delete _impl_.map_message_;
        }
        if (map_message)
        {
            ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
                ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(map_message);
            if (message_arena != submessage_arena)
            {
                map_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
                    message_arena, map_message, submessage_arena
                );
            }
        }
        else
        {
        }
        _impl_.map_message_ = map_message;
        // @@protoc_insertion_point(field_set_allocated:protobuf.MessageToClient.map_message)
    }

    // .protobuf.GameState game_state = 7;
    inline void MessageToClient::clear_game_state()
    {
        _impl_.game_state_ = 0;
    }
    inline ::protobuf::GameState MessageToClient::_internal_game_state() const
    {
        return static_cast<::protobuf::GameState>(_impl_.game_state_);
    }
    inline ::protobuf::GameState MessageToClient::game_state() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MessageToClient.game_state)
        return _internal_game_state();
    }
    inline void MessageToClient::_internal_set_game_state(::protobuf::GameState value)
    {
        _impl_.game_state_ = value;
    }
    inline void MessageToClient::set_game_state(::protobuf::GameState value)
    {
        _internal_set_game_state(value);
        // @@protoc_insertion_point(field_set:protobuf.MessageToClient.game_state)
    }

    // -------------------------------------------------------------------

    // MoveRes

    // int64 actual_speed = 1;
    inline void MoveRes::clear_actual_speed()
    {
        _impl_.actual_speed_ = int64_t{0};
    }
    inline int64_t MoveRes::_internal_actual_speed() const
    {
        return _impl_.actual_speed_;
    }
    inline int64_t MoveRes::actual_speed() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MoveRes.actual_speed)
        return _internal_actual_speed();
    }
    inline void MoveRes::_internal_set_actual_speed(int64_t value)
    {
        _impl_.actual_speed_ = value;
    }
    inline void MoveRes::set_actual_speed(int64_t value)
    {
        _internal_set_actual_speed(value);
        // @@protoc_insertion_point(field_set:protobuf.MoveRes.actual_speed)
    }

    // double actual_angle = 2;
    inline void MoveRes::clear_actual_angle()
    {
        _impl_.actual_angle_ = 0;
    }
    inline double MoveRes::_internal_actual_angle() const
    {
        return _impl_.actual_angle_;
    }
    inline double MoveRes::actual_angle() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MoveRes.actual_angle)
        return _internal_actual_angle();
    }
    inline void MoveRes::_internal_set_actual_angle(double value)
    {
        _impl_.actual_angle_ = value;
    }
    inline void MoveRes::set_actual_angle(double value)
    {
        _internal_set_actual_angle(value);
        // @@protoc_insertion_point(field_set:protobuf.MoveRes.actual_angle)
    }

    // bool act_success = 3;
    inline void MoveRes::clear_act_success()
    {
        _impl_.act_success_ = false;
    }
    inline bool MoveRes::_internal_act_success() const
    {
        return _impl_.act_success_;
    }
    inline bool MoveRes::act_success() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MoveRes.act_success)
        return _internal_act_success();
    }
    inline void MoveRes::_internal_set_act_success(bool value)
    {
        _impl_.act_success_ = value;
    }
    inline void MoveRes::set_act_success(bool value)
    {
        _internal_set_act_success(value);
        // @@protoc_insertion_point(field_set:protobuf.MoveRes.act_success)
    }

    // -------------------------------------------------------------------

    // BoolRes

    // bool act_success = 1;
    inline void BoolRes::clear_act_success()
    {
        _impl_.act_success_ = false;
    }
    inline bool BoolRes::_internal_act_success() const
    {
        return _impl_.act_success_;
    }
    inline bool BoolRes::act_success() const
    {
        // @@protoc_insertion_point(field_get:protobuf.BoolRes.act_success)
        return _internal_act_success();
    }
    inline void BoolRes::_internal_set_act_success(bool value)
    {
        _impl_.act_success_ = value;
    }
    inline void BoolRes::set_act_success(bool value)
    {
        _internal_set_act_success(value);
        // @@protoc_insertion_point(field_set:protobuf.BoolRes.act_success)
    }

    // -------------------------------------------------------------------

    // MsgRes

    // bool have_message = 1;
    inline void MsgRes::clear_have_message()
    {
        _impl_.have_message_ = false;
    }
    inline bool MsgRes::_internal_have_message() const
    {
        return _impl_.have_message_;
    }
    inline bool MsgRes::have_message() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MsgRes.have_message)
        return _internal_have_message();
    }
    inline void MsgRes::_internal_set_have_message(bool value)
    {
        _impl_.have_message_ = value;
    }
    inline void MsgRes::set_have_message(bool value)
    {
        _internal_set_have_message(value);
        // @@protoc_insertion_point(field_set:protobuf.MsgRes.have_message)
    }

    // int64 from_player_id = 2;
    inline void MsgRes::clear_from_player_id()
    {
        _impl_.from_player_id_ = int64_t{0};
    }
    inline int64_t MsgRes::_internal_from_player_id() const
    {
        return _impl_.from_player_id_;
    }
    inline int64_t MsgRes::from_player_id() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MsgRes.from_player_id)
        return _internal_from_player_id();
    }
    inline void MsgRes::_internal_set_from_player_id(int64_t value)
    {
        _impl_.from_player_id_ = value;
    }
    inline void MsgRes::set_from_player_id(int64_t value)
    {
        _internal_set_from_player_id(value);
        // @@protoc_insertion_point(field_set:protobuf.MsgRes.from_player_id)
    }

    // string message_received = 3;
    inline void MsgRes::clear_message_received()
    {
        _impl_.message_received_.ClearToEmpty();
    }
    inline const std::string& MsgRes::message_received() const
    {
        // @@protoc_insertion_point(field_get:protobuf.MsgRes.message_received)
        return _internal_message_received();
    }
    template<typename ArgT0, typename... ArgT>
    inline PROTOBUF_ALWAYS_INLINE void MsgRes::set_message_received(ArgT0&& arg0, ArgT... args)
    {
        _impl_.message_received_.Set(static_cast<ArgT0&&>(arg0), args..., GetArenaForAllocation());
        // @@protoc_insertion_point(field_set:protobuf.MsgRes.message_received)
    }
    inline std::string* MsgRes::mutable_message_received()
    {
        std::string* _s = _internal_mutable_message_received();
        // @@protoc_insertion_point(field_mutable:protobuf.MsgRes.message_received)
        return _s;
    }
    inline const std::string& MsgRes::_internal_message_received() const
    {
        return _impl_.message_received_.Get();
    }
    inline void MsgRes::_internal_set_message_received(const std::string& value)
    {
        _impl_.message_received_.Set(value, GetArenaForAllocation());
    }
    inline std::string* MsgRes::_internal_mutable_message_received()
    {
        return _impl_.message_received_.Mutable(GetArenaForAllocation());
    }
    inline std::string* MsgRes::release_message_received()
    {
        // @@protoc_insertion_point(field_release:protobuf.MsgRes.message_received)
        return _impl_.message_received_.Release();
    }
    inline void MsgRes::set_allocated_message_received(std::string* message_received)
    {
        if (message_received != nullptr)
        {
        }
        else
        {
        }
        _impl_.message_received_.SetAllocated(message_received, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_received_.IsDefault())
        {
            _impl_.message_received_.Set("", GetArenaForAllocation());
        }
#endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
        // @@protoc_insertion_point(field_set_allocated:protobuf.MsgRes.message_received)
    }

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__
    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // -------------------------------------------------------------------

    // @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto
