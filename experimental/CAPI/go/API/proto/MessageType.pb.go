// MessageType

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: MessageType.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BulletType int32

const (
	BulletType_NULL_BULLET_TYPE         BulletType = 0
	BulletType_FLYING_KNIFE             BulletType = 1
	BulletType_COMMON_ATTACK_OF_TRICKER BulletType = 2
	BulletType_BOMB_BOMB                BulletType = 3
	BulletType_JUMPY_DUMPTY             BulletType = 4
	BulletType_ATOM_BOMB                BulletType = 5
)

// Enum value maps for BulletType.
var (
	BulletType_name = map[int32]string{
		0: "NULL_BULLET_TYPE",
		1: "FLYING_KNIFE",
		2: "COMMON_ATTACK_OF_TRICKER",
		3: "BOMB_BOMB",
		4: "JUMPY_DUMPTY",
		5: "ATOM_BOMB",
	}
	BulletType_value = map[string]int32{
		"NULL_BULLET_TYPE":         0,
		"FLYING_KNIFE":             1,
		"COMMON_ATTACK_OF_TRICKER": 2,
		"BOMB_BOMB":                3,
		"JUMPY_DUMPTY":             4,
		"ATOM_BOMB":                5,
	}
)

func (x BulletType) Enum() *BulletType {
	p := new(BulletType)
	*p = x
	return p
}

func (x BulletType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BulletType) Descriptor() protoreflect.EnumDescriptor {
	return file_MessageType_proto_enumTypes[0].Descriptor()
}

func (BulletType) Type() protoreflect.EnumType {
	return &file_MessageType_proto_enumTypes[0]
}

func (x BulletType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BulletType.Descriptor instead.
func (BulletType) EnumDescriptor() ([]byte, []int) {
	return file_MessageType_proto_rawDescGZIP(), []int{0}
}

type PlaceType int32

const (
	PlaceType_NULL_PLACE_TYPE PlaceType = 0
	// 地图情况，其中Gate是总体的大门，HiddenGate是地窖
	PlaceType_LAND        PlaceType = 1
	PlaceType_WALL        PlaceType = 2
	PlaceType_GRASS       PlaceType = 3
	PlaceType_CLASSROOM   PlaceType = 4
	PlaceType_GATE        PlaceType = 5
	PlaceType_HIDDEN_GATE PlaceType = 6
	PlaceType_WINDOW      PlaceType = 7
	PlaceType_DOOR3       PlaceType = 8
	PlaceType_DOOR5       PlaceType = 9
	PlaceType_DOOR6       PlaceType = 10
	PlaceType_CHEST       PlaceType = 11 // 待补充有特殊效果的地形
)

// Enum value maps for PlaceType.
var (
	PlaceType_name = map[int32]string{
		0:  "NULL_PLACE_TYPE",
		1:  "LAND",
		2:  "WALL",
		3:  "GRASS",
		4:  "CLASSROOM",
		5:  "GATE",
		6:  "HIDDEN_GATE",
		7:  "WINDOW",
		8:  "DOOR3",
		9:  "DOOR5",
		10: "DOOR6",
		11: "CHEST",
	}
	PlaceType_value = map[string]int32{
		"NULL_PLACE_TYPE": 0,
		"LAND":            1,
		"WALL":            2,
		"GRASS":           3,
		"CLASSROOM":       4,
		"GATE":            5,
		"HIDDEN_GATE":     6,
		"WINDOW":          7,
		"DOOR3":           8,
		"DOOR5":           9,
		"DOOR6":           10,
		"CHEST":           11,
	}
)

func (x PlaceType) Enum() *PlaceType {
	p := new(PlaceType)
	*p = x
	return p
}

func (x PlaceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlaceType) Descriptor() protoreflect.EnumDescriptor {
	return file_MessageType_proto_enumTypes[1].Descriptor()
}

func (PlaceType) Type() protoreflect.EnumType {
	return &file_MessageType_proto_enumTypes[1]
}

func (x PlaceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlaceType.Descriptor instead.
func (PlaceType) EnumDescriptor() ([]byte, []int) {
	return file_MessageType_proto_rawDescGZIP(), []int{1}
}

type ShapeType int32

const (
	ShapeType_NULL_SHAPE_TYPE ShapeType = 0
	ShapeType_CIRCLE          ShapeType = 1 // 人类、屠夫、可拾取道具等为圆形
	ShapeType_SQUARE          ShapeType = 2 // 地形均为方形
)

// Enum value maps for ShapeType.
var (
	ShapeType_name = map[int32]string{
		0: "NULL_SHAPE_TYPE",
		1: "CIRCLE",
		2: "SQUARE",
	}
	ShapeType_value = map[string]int32{
		"NULL_SHAPE_TYPE": 0,
		"CIRCLE":          1,
		"SQUARE":          2,
	}
)

func (x ShapeType) Enum() *ShapeType {
	p := new(ShapeType)
	*p = x
	return p
}

func (x ShapeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ShapeType) Descriptor() protoreflect.EnumDescriptor {
	return file_MessageType_proto_enumTypes[2].Descriptor()
}

func (ShapeType) Type() protoreflect.EnumType {
	return &file_MessageType_proto_enumTypes[2]
}

func (x ShapeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ShapeType.Descriptor instead.
func (ShapeType) EnumDescriptor() ([]byte, []int) {
	return file_MessageType_proto_rawDescGZIP(), []int{2}
}

type PropType int32

const (
	PropType_NULL_PROP_TYPE            PropType = 0
	PropType_ADD_SPEED                 PropType = 1
	PropType_ADD_LIFE_OR_CLAIRAUDIENCE PropType = 2
	PropType_ADD_HP_OR_AP              PropType = 3
	PropType_SHIELD_OR_SPEAR           PropType = 4
	PropType_KEY3                      PropType = 5
	PropType_KEY5                      PropType = 6
	PropType_KEY6                      PropType = 7
	PropType_RECOVERY_FROM_DIZZINESS   PropType = 8
)

// Enum value maps for PropType.
var (
	PropType_name = map[int32]string{
		0: "NULL_PROP_TYPE",
		1: "ADD_SPEED",
		2: "ADD_LIFE_OR_CLAIRAUDIENCE",
		3: "ADD_HP_OR_AP",
		4: "SHIELD_OR_SPEAR",
		5: "KEY3",
		6: "KEY5",
		7: "KEY6",
		8: "RECOVERY_FROM_DIZZINESS",
	}
	PropType_value = map[string]int32{
		"NULL_PROP_TYPE":            0,
		"ADD_SPEED":                 1,
		"ADD_LIFE_OR_CLAIRAUDIENCE": 2,
		"ADD_HP_OR_AP":              3,
		"SHIELD_OR_SPEAR":           4,
		"KEY3":                      5,
		"KEY5":                      6,
		"KEY6":                      7,
		"RECOVERY_FROM_DIZZINESS":   8,
	}
)

func (x PropType) Enum() *PropType {
	p := new(PropType)
	*p = x
	return p
}

func (x PropType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PropType) Descriptor() protoreflect.EnumDescriptor {
	return file_MessageType_proto_enumTypes[3].Descriptor()
}

func (PropType) Type() protoreflect.EnumType {
	return &file_MessageType_proto_enumTypes[3]
}

func (x PropType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PropType.Descriptor instead.
func (PropType) EnumDescriptor() ([]byte, []int) {
	return file_MessageType_proto_rawDescGZIP(), []int{3}
}

type StudentBuffType int32

const (
	StudentBuffType_NULL_SBUFF_TYPE   StudentBuffType = 0
	StudentBuffType_STUDENT_ADD_SPEED StudentBuffType = 1
	StudentBuffType_ADD_LIFE          StudentBuffType = 2
	StudentBuffType_SHIELD            StudentBuffType = 3
	StudentBuffType_STUDENT_INVISIBLE StudentBuffType = 4
)

// Enum value maps for StudentBuffType.
var (
	StudentBuffType_name = map[int32]string{
		0: "NULL_SBUFF_TYPE",
		1: "STUDENT_ADD_SPEED",
		2: "ADD_LIFE",
		3: "SHIELD",
		4: "STUDENT_INVISIBLE",
	}
	StudentBuffType_value = map[string]int32{
		"NULL_SBUFF_TYPE":   0,
		"STUDENT_ADD_SPEED": 1,
		"ADD_LIFE":          2,
		"SHIELD":            3,
		"STUDENT_INVISIBLE": 4,
	}
)

func (x StudentBuffType) Enum() *StudentBuffType {
	p := new(StudentBuffType)
	*p = x
	return p
}

func (x StudentBuffType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StudentBuffType) Descriptor() protoreflect.EnumDescriptor {
	return file_MessageType_proto_enumTypes[4].Descriptor()
}

func (StudentBuffType) Type() protoreflect.EnumType {
	return &file_MessageType_proto_enumTypes[4]
}

func (x StudentBuffType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StudentBuffType.Descriptor instead.
func (StudentBuffType) EnumDescriptor() ([]byte, []int) {
	return file_MessageType_proto_rawDescGZIP(), []int{4}
}

type PlayerState int32

const (
	PlayerState_NULL_STATUS         PlayerState = 0
	PlayerState_IDLE                PlayerState = 1 // 正常状态
	PlayerState_LEARNING            PlayerState = 2 // 学习状态，相当于在修机器
	PlayerState_ADDICTED            PlayerState = 3 // 血条归零后原地沉迷游戏
	PlayerState_QUIT                PlayerState = 4 // 退学状态，相当于寄了
	PlayerState_GRADUATED           PlayerState = 5 // 毕业状态，相当于逃脱了
	PlayerState_TREATED             PlayerState = 6
	PlayerState_RESCUED             PlayerState = 7
	PlayerState_STUNNED             PlayerState = 8
	PlayerState_TREATING            PlayerState = 9
	PlayerState_RESCUING            PlayerState = 10
	PlayerState_SWINGING            PlayerState = 11 // 后摇
	PlayerState_ATTACKING           PlayerState = 12 // 前摇
	PlayerState_LOCKING             PlayerState = 13
	PlayerState_RUMMAGING           PlayerState = 14
	PlayerState_CLIMBING            PlayerState = 15 // 翻窗
	PlayerState_OPENING_A_CHEST     PlayerState = 16
	PlayerState_USING_SPECIAL_SKILL PlayerState = 17
	PlayerState_OPENING_A_GATE      PlayerState = 18
)

// Enum value maps for PlayerState.
var (
	PlayerState_name = map[int32]string{
		0:  "NULL_STATUS",
		1:  "IDLE",
		2:  "LEARNING",
		3:  "ADDICTED",
		4:  "QUIT",
		5:  "GRADUATED",
		6:  "TREATED",
		7:  "RESCUED",
		8:  "STUNNED",
		9:  "TREATING",
		10: "RESCUING",
		11: "SWINGING",
		12: "ATTACKING",
		13: "LOCKING",
		14: "RUMMAGING",
		15: "CLIMBING",
		16: "OPENING_A_CHEST",
		17: "USING_SPECIAL_SKILL",
		18: "OPENING_A_GATE",
	}
	PlayerState_value = map[string]int32{
		"NULL_STATUS":         0,
		"IDLE":                1,
		"LEARNING":            2,
		"ADDICTED":            3,
		"QUIT":                4,
		"GRADUATED":           5,
		"TREATED":             6,
		"RESCUED":             7,
		"STUNNED":             8,
		"TREATING":            9,
		"RESCUING":            10,
		"SWINGING":            11,
		"ATTACKING":           12,
		"LOCKING":             13,
		"RUMMAGING":           14,
		"CLIMBING":            15,
		"OPENING_A_CHEST":     16,
		"USING_SPECIAL_SKILL": 17,
		"OPENING_A_GATE":      18,
	}
)

func (x PlayerState) Enum() *PlayerState {
	p := new(PlayerState)
	*p = x
	return p
}

func (x PlayerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerState) Descriptor() protoreflect.EnumDescriptor {
	return file_MessageType_proto_enumTypes[5].Descriptor()
}

func (PlayerState) Type() protoreflect.EnumType {
	return &file_MessageType_proto_enumTypes[5]
}

func (x PlayerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerState.Descriptor instead.
func (PlayerState) EnumDescriptor() ([]byte, []int) {
	return file_MessageType_proto_rawDescGZIP(), []int{5}
}

type TrickerBuffType int32

const (
	TrickerBuffType_NULL_TBUFF_TYPE   TrickerBuffType = 0
	TrickerBuffType_TRICKER_ADD_SPEED TrickerBuffType = 1
	TrickerBuffType_SPEAR             TrickerBuffType = 2
	TrickerBuffType_ADD_AP            TrickerBuffType = 3
	TrickerBuffType_CLAIRAUDIENCE     TrickerBuffType = 4
	TrickerBuffType_TRICKER_INVISIBLE TrickerBuffType = 5
)

// Enum value maps for TrickerBuffType.
var (
	TrickerBuffType_name = map[int32]string{
		0: "NULL_TBUFF_TYPE",
		1: "TRICKER_ADD_SPEED",
		2: "SPEAR",
		3: "ADD_AP",
		4: "CLAIRAUDIENCE",
		5: "TRICKER_INVISIBLE",
	}
	TrickerBuffType_value = map[string]int32{
		"NULL_TBUFF_TYPE":   0,
		"TRICKER_ADD_SPEED": 1,
		"SPEAR":             2,
		"ADD_AP":            3,
		"CLAIRAUDIENCE":     4,
		"TRICKER_INVISIBLE": 5,
	}
)

func (x TrickerBuffType) Enum() *TrickerBuffType {
	p := new(TrickerBuffType)
	*p = x
	return p
}

func (x TrickerBuffType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrickerBuffType) Descriptor() protoreflect.EnumDescriptor {
	return file_MessageType_proto_enumTypes[6].Descriptor()
}

func (TrickerBuffType) Type() protoreflect.EnumType {
	return &file_MessageType_proto_enumTypes[6]
}

func (x TrickerBuffType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrickerBuffType.Descriptor instead.
func (TrickerBuffType) EnumDescriptor() ([]byte, []int) {
	return file_MessageType_proto_rawDescGZIP(), []int{6}
}

type PlayerType int32

const (
	PlayerType_NULL_PLAYER_TYPE PlayerType = 0
	PlayerType_STUDENT_PLAYER   PlayerType = 1
	PlayerType_TRICKER_PLAYER   PlayerType = 2
)

// Enum value maps for PlayerType.
var (
	PlayerType_name = map[int32]string{
		0: "NULL_PLAYER_TYPE",
		1: "STUDENT_PLAYER",
		2: "TRICKER_PLAYER",
	}
	PlayerType_value = map[string]int32{
		"NULL_PLAYER_TYPE": 0,
		"STUDENT_PLAYER":   1,
		"TRICKER_PLAYER":   2,
	}
)

func (x PlayerType) Enum() *PlayerType {
	p := new(PlayerType)
	*p = x
	return p
}

func (x PlayerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerType) Descriptor() protoreflect.EnumDescriptor {
	return file_MessageType_proto_enumTypes[7].Descriptor()
}

func (PlayerType) Type() protoreflect.EnumType {
	return &file_MessageType_proto_enumTypes[7]
}

func (x PlayerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerType.Descriptor instead.
func (PlayerType) EnumDescriptor() ([]byte, []int) {
	return file_MessageType_proto_rawDescGZIP(), []int{7}
}

type StudentType int32

const (
	StudentType_NULL_STUDENT_TYPE  StudentType = 0
	StudentType_ATHLETE            StudentType = 1
	StudentType_TEACHER            StudentType = 2
	StudentType_STRAIGHT_A_STUDENT StudentType = 3
	StudentType_ROBOT              StudentType = 4
	StudentType_TECH_OTAKU         StudentType = 5
	StudentType_SUNSHINE           StudentType = 6
)

// Enum value maps for StudentType.
var (
	StudentType_name = map[int32]string{
		0: "NULL_STUDENT_TYPE",
		1: "ATHLETE",
		2: "TEACHER",
		3: "STRAIGHT_A_STUDENT",
		4: "ROBOT",
		5: "TECH_OTAKU",
		6: "SUNSHINE",
	}
	StudentType_value = map[string]int32{
		"NULL_STUDENT_TYPE":  0,
		"ATHLETE":            1,
		"TEACHER":            2,
		"STRAIGHT_A_STUDENT": 3,
		"ROBOT":              4,
		"TECH_OTAKU":         5,
		"SUNSHINE":           6,
	}
)

func (x StudentType) Enum() *StudentType {
	p := new(StudentType)
	*p = x
	return p
}

func (x StudentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StudentType) Descriptor() protoreflect.EnumDescriptor {
	return file_MessageType_proto_enumTypes[8].Descriptor()
}

func (StudentType) Type() protoreflect.EnumType {
	return &file_MessageType_proto_enumTypes[8]
}

func (x StudentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StudentType.Descriptor instead.
func (StudentType) EnumDescriptor() ([]byte, []int) {
	return file_MessageType_proto_rawDescGZIP(), []int{8}
}

type TrickerType int32

const (
	TrickerType_NULL_TRICKER_TYPE TrickerType = 0
	TrickerType_ASSASSIN          TrickerType = 1
	TrickerType_KLEE              TrickerType = 2
	TrickerType_A_NOISY_PERSON    TrickerType = 3
	TrickerType_IDOL              TrickerType = 4
)

// Enum value maps for TrickerType.
var (
	TrickerType_name = map[int32]string{
		0: "NULL_TRICKER_TYPE",
		1: "ASSASSIN",
		2: "KLEE",
		3: "A_NOISY_PERSON",
		4: "IDOL",
	}
	TrickerType_value = map[string]int32{
		"NULL_TRICKER_TYPE": 0,
		"ASSASSIN":          1,
		"KLEE":              2,
		"A_NOISY_PERSON":    3,
		"IDOL":              4,
	}
)

func (x TrickerType) Enum() *TrickerType {
	p := new(TrickerType)
	*p = x
	return p
}

func (x TrickerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TrickerType) Descriptor() protoreflect.EnumDescriptor {
	return file_MessageType_proto_enumTypes[9].Descriptor()
}

func (TrickerType) Type() protoreflect.EnumType {
	return &file_MessageType_proto_enumTypes[9]
}

func (x TrickerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TrickerType.Descriptor instead.
func (TrickerType) EnumDescriptor() ([]byte, []int) {
	return file_MessageType_proto_rawDescGZIP(), []int{9}
}

// 游戏进行状态
type GameState int32

const (
	GameState_NULL_GAME_STATE GameState = 0
	GameState_GAME_START      GameState = 1
	GameState_GAME_RUNNING    GameState = 2
	GameState_GAME_END        GameState = 3
)

// Enum value maps for GameState.
var (
	GameState_name = map[int32]string{
		0: "NULL_GAME_STATE",
		1: "GAME_START",
		2: "GAME_RUNNING",
		3: "GAME_END",
	}
	GameState_value = map[string]int32{
		"NULL_GAME_STATE": 0,
		"GAME_START":      1,
		"GAME_RUNNING":    2,
		"GAME_END":        3,
	}
)

func (x GameState) Enum() *GameState {
	p := new(GameState)
	*p = x
	return p
}

func (x GameState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GameState) Descriptor() protoreflect.EnumDescriptor {
	return file_MessageType_proto_enumTypes[10].Descriptor()
}

func (GameState) Type() protoreflect.EnumType {
	return &file_MessageType_proto_enumTypes[10]
}

func (x GameState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GameState.Descriptor instead.
func (GameState) EnumDescriptor() ([]byte, []int) {
	return file_MessageType_proto_rawDescGZIP(), []int{10}
}

var File_MessageType_proto protoreflect.FileDescriptor

var file_MessageType_proto_rawDesc = []byte{
	0x0a, 0x11, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2a, 0x82, 0x01,
	0x0a, 0x0a, 0x42, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10,
	0x4e, 0x55, 0x4c, 0x4c, 0x5f, 0x42, 0x55, 0x4c, 0x4c, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x4c, 0x59, 0x49, 0x4e, 0x47, 0x5f, 0x4b, 0x4e, 0x49,
	0x46, 0x45, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e, 0x5f, 0x41,
	0x54, 0x54, 0x41, 0x43, 0x4b, 0x5f, 0x4f, 0x46, 0x5f, 0x54, 0x52, 0x49, 0x43, 0x4b, 0x45, 0x52,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x4f, 0x4d, 0x42, 0x5f, 0x42, 0x4f, 0x4d, 0x42, 0x10,
	0x03, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x55, 0x4d, 0x50, 0x59, 0x5f, 0x44, 0x55, 0x4d, 0x50, 0x54,
	0x59, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x54, 0x4f, 0x4d, 0x5f, 0x42, 0x4f, 0x4d, 0x42,
	0x10, 0x05, 0x2a, 0xa1, 0x01, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x55, 0x4c, 0x4c, 0x5f, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x41, 0x4e, 0x44, 0x10, 0x01, 0x12,
	0x08, 0x0a, 0x04, 0x57, 0x41, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x52, 0x41,
	0x53, 0x53, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x52, 0x4f, 0x4f,
	0x4d, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x47, 0x41, 0x54, 0x45, 0x10, 0x05, 0x12, 0x0f, 0x0a,
	0x0b, 0x48, 0x49, 0x44, 0x44, 0x45, 0x4e, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x10, 0x06, 0x12, 0x0a,
	0x0a, 0x06, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x4f,
	0x4f, 0x52, 0x33, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x4f, 0x4f, 0x52, 0x35, 0x10, 0x09,
	0x12, 0x09, 0x0a, 0x05, 0x44, 0x4f, 0x4f, 0x52, 0x36, 0x10, 0x0a, 0x12, 0x09, 0x0a, 0x05, 0x43,
	0x48, 0x45, 0x53, 0x54, 0x10, 0x0b, 0x2a, 0x38, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x70, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x55, 0x4c, 0x4c, 0x5f, 0x53, 0x48, 0x41, 0x50,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x49, 0x52, 0x43,
	0x4c, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x51, 0x55, 0x41, 0x52, 0x45, 0x10, 0x02,
	0x2a, 0xae, 0x01, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x0e, 0x4e, 0x55, 0x4c, 0x4c, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x44, 0x44, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x1d, 0x0a, 0x19, 0x41, 0x44, 0x44, 0x5f, 0x4c, 0x49, 0x46, 0x45, 0x5f, 0x4f, 0x52, 0x5f,
	0x43, 0x4c, 0x41, 0x49, 0x52, 0x41, 0x55, 0x44, 0x49, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x41, 0x44, 0x44, 0x5f, 0x48, 0x50, 0x5f, 0x4f, 0x52, 0x5f, 0x41, 0x50, 0x10,
	0x03, 0x12, 0x13, 0x0a, 0x0f, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x5f, 0x4f, 0x52, 0x5f, 0x53,
	0x50, 0x45, 0x41, 0x52, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4b, 0x45, 0x59, 0x33, 0x10, 0x05,
	0x12, 0x08, 0x0a, 0x04, 0x4b, 0x45, 0x59, 0x35, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x4b, 0x45,
	0x59, 0x36, 0x10, 0x07, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x43, 0x4f, 0x56, 0x45, 0x52, 0x59,
	0x5f, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x44, 0x49, 0x5a, 0x5a, 0x49, 0x4e, 0x45, 0x53, 0x53, 0x10,
	0x08, 0x2a, 0x6e, 0x0a, 0x0f, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x66, 0x66,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x55, 0x4c, 0x4c, 0x5f, 0x53, 0x42, 0x55,
	0x46, 0x46, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x55,
	0x44, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x44, 0x44, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x41, 0x44, 0x44, 0x5f, 0x4c, 0x49, 0x46, 0x45, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x53, 0x48, 0x49, 0x45, 0x4c, 0x44, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54,
	0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x10,
	0x04, 0x2a, 0xa9, 0x02, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x55, 0x4c, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x4c, 0x45, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x44,
	0x44, 0x49, 0x43, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x51, 0x55, 0x49, 0x54,
	0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x52, 0x41, 0x44, 0x55, 0x41, 0x54, 0x45, 0x44, 0x10,
	0x05, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x45, 0x53, 0x43, 0x55, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x54, 0x55, 0x4e, 0x4e, 0x45, 0x44, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x52, 0x45, 0x41,
	0x54, 0x49, 0x4e, 0x47, 0x10, 0x09, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x53, 0x43, 0x55, 0x49,
	0x4e, 0x47, 0x10, 0x0a, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x57, 0x49, 0x4e, 0x47, 0x49, 0x4e, 0x47,
	0x10, 0x0b, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x54, 0x54, 0x41, 0x43, 0x4b, 0x49, 0x4e, 0x47, 0x10,
	0x0c, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x4f, 0x43, 0x4b, 0x49, 0x4e, 0x47, 0x10, 0x0d, 0x12, 0x0d,
	0x0a, 0x09, 0x52, 0x55, 0x4d, 0x4d, 0x41, 0x47, 0x49, 0x4e, 0x47, 0x10, 0x0e, 0x12, 0x0c, 0x0a,
	0x08, 0x43, 0x4c, 0x49, 0x4d, 0x42, 0x49, 0x4e, 0x47, 0x10, 0x0f, 0x12, 0x13, 0x0a, 0x0f, 0x4f,
	0x50, 0x45, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x5f, 0x43, 0x48, 0x45, 0x53, 0x54, 0x10, 0x10,
	0x12, 0x17, 0x0a, 0x13, 0x55, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x41,
	0x4c, 0x5f, 0x53, 0x4b, 0x49, 0x4c, 0x4c, 0x10, 0x11, 0x12, 0x12, 0x0a, 0x0e, 0x4f, 0x50, 0x45,
	0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x41, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x10, 0x12, 0x2a, 0x7e, 0x0a,
	0x0f, 0x54, 0x72, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x75, 0x66, 0x66, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x55, 0x4c, 0x4c, 0x5f, 0x54, 0x42, 0x55, 0x46, 0x46, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x52, 0x49, 0x43, 0x4b, 0x45, 0x52,
	0x5f, 0x41, 0x44, 0x44, 0x5f, 0x53, 0x50, 0x45, 0x45, 0x44, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05,
	0x53, 0x50, 0x45, 0x41, 0x52, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x44, 0x44, 0x5f, 0x41,
	0x50, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4c, 0x41, 0x49, 0x52, 0x41, 0x55, 0x44, 0x49,
	0x45, 0x4e, 0x43, 0x45, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x52, 0x49, 0x43, 0x4b, 0x45,
	0x52, 0x5f, 0x49, 0x4e, 0x56, 0x49, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x05, 0x2a, 0x4a, 0x0a,
	0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x4e,
	0x55, 0x4c, 0x4c, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x52, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x52, 0x49, 0x43, 0x4b, 0x45, 0x52,
	0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x7f, 0x0a, 0x0b, 0x53, 0x74, 0x75,
	0x64, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x55, 0x4c, 0x4c,
	0x5f, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x41, 0x54, 0x48, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x54, 0x45, 0x41, 0x43, 0x48, 0x45, 0x52, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x52,
	0x41, 0x49, 0x47, 0x48, 0x54, 0x5f, 0x41, 0x5f, 0x53, 0x54, 0x55, 0x44, 0x45, 0x4e, 0x54, 0x10,
	0x03, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a,
	0x54, 0x45, 0x43, 0x48, 0x5f, 0x4f, 0x54, 0x41, 0x4b, 0x55, 0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08,
	0x53, 0x55, 0x4e, 0x53, 0x48, 0x49, 0x4e, 0x45, 0x10, 0x06, 0x2a, 0x5a, 0x0a, 0x0b, 0x54, 0x72,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x4e, 0x55, 0x4c,
	0x4c, 0x5f, 0x54, 0x52, 0x49, 0x43, 0x4b, 0x45, 0x52, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x41, 0x53, 0x53, 0x41, 0x53, 0x53, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x4b, 0x4c, 0x45, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x5f, 0x4e, 0x4f,
	0x49, 0x53, 0x59, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04,
	0x49, 0x44, 0x4f, 0x4c, 0x10, 0x04, 0x2a, 0x50, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x4e, 0x55, 0x4c, 0x4c, 0x5f, 0x47, 0x41, 0x4d, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x47, 0x41, 0x4d, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x41, 0x4d, 0x45,
	0x5f, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x41,
	0x4d, 0x45, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x03, 0x42, 0x6f, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x42, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x0d, 0x6a, 0x6f,
	0x62, 0x2d, 0x41, 0x50, 0x49, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0xa2, 0x02, 0x03, 0x50, 0x58,
	0x58, 0xaa, 0x02, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0xca, 0x02, 0x08, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0xe2, 0x02, 0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_MessageType_proto_rawDescOnce sync.Once
	file_MessageType_proto_rawDescData = file_MessageType_proto_rawDesc
)

func file_MessageType_proto_rawDescGZIP() []byte {
	file_MessageType_proto_rawDescOnce.Do(func() {
		file_MessageType_proto_rawDescData = protoimpl.X.CompressGZIP(file_MessageType_proto_rawDescData)
	})
	return file_MessageType_proto_rawDescData
}

var file_MessageType_proto_enumTypes = make([]protoimpl.EnumInfo, 11)
var file_MessageType_proto_goTypes = []interface{}{
	(BulletType)(0),      // 0: protobuf.BulletType
	(PlaceType)(0),       // 1: protobuf.PlaceType
	(ShapeType)(0),       // 2: protobuf.ShapeType
	(PropType)(0),        // 3: protobuf.PropType
	(StudentBuffType)(0), // 4: protobuf.StudentBuffType
	(PlayerState)(0),     // 5: protobuf.PlayerState
	(TrickerBuffType)(0), // 6: protobuf.TrickerBuffType
	(PlayerType)(0),      // 7: protobuf.PlayerType
	(StudentType)(0),     // 8: protobuf.StudentType
	(TrickerType)(0),     // 9: protobuf.TrickerType
	(GameState)(0),       // 10: protobuf.GameState
}
var file_MessageType_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_MessageType_proto_init() }
func file_MessageType_proto_init() {
	if File_MessageType_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_MessageType_proto_rawDesc,
			NumEnums:      11,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_MessageType_proto_goTypes,
		DependencyIndexes: file_MessageType_proto_depIdxs,
		EnumInfos:         file_MessageType_proto_enumTypes,
	}.Build()
	File_MessageType_proto = out.File
	file_MessageType_proto_rawDesc = nil
	file_MessageType_proto_goTypes = nil
	file_MessageType_proto_depIdxs = nil
}
